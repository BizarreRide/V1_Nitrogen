AICctab(cc.0,  cc.1,  cc.2,  cc.3,  cc.4,  cc.5,  cc.6,  cc.7)
#as.character(rep("cc",c(1:15)))
#x <- factor(paste("cc",".",c(0:15),",",sep=""), levels=)
#print(x)
#x <- factor(paste("cc",".",c(0:15)," <- ",sep=""), levels=)
#as.data.frame(x)
summary.aov(cc.2)
par(mfrow=c(2,2))
plot(cc.2)
par(mfrow=c(1,1))
boxcox(cc.2)
# locator(1)
fligner.test(cc~interaction(Lt,soil), co2.cum[!(co2.cum$exp=="exp1"),])
cc.aov2 <- aov(cc~Lt*soil, co2.cum[!(co2.cum$exp=="exp1"),])
TukeyHSD(cc.aov2)
cc.int <- with(co2.cum[!(co2.cum$exp=="exp1"),], interaction(soil,Lt)) # Double interaction factor
cc.aov3 <- update(cc.aov2,.~cc.int)
HSD.test(cc.aov3, "cc.int", group=TRUE, console=TRUE)
txt.cc = expression(paste("Carbon Dioxide", CO[2]," [mg ",CO[2],"-C ",kg^-1,"]"))
ggplot(co2.cum[!(co2.cum$exp=="exp1"),], aes(x=Lt, y=cc), family="Arial") +
stat_boxplot(geom="errorbar", coef=1.5, lwd=0.2) +
geom_boxplot(fill="grey", lwd=0.2, outlier.size=0.4, outlier.shape=21) +
facet_grid( .~ soil , scales="free", space="free",labeller=label_parsed) +
ylab(txt.cc) +
xlab("L. terrestris") +
scale_x_discrete(labels=c("absent", "present")) +
ggtitle("Experiment 2") +
mytheme
cc.int <- with(co2.cum[!(co2.cum$exp=="exp1"),], interaction(soil,Lt,Fc)) # Double interaction factor
cc.aov3 <- update(cc.aov2,.~cc.int)
HSD.test(cc.aov3, "cc.int", group=TRUE, console=TRUE)
with(co2.cum[!(co2.cum$exp=="exp1"),], list(round(tapply(cc, interaction(Lt,soil), mean),0),
round(tapply(cc, interaction(Lt,soil), se),0)))
with(co2.cum[!(co2.cum$exp=="exp2"),], list(round(tapply(cc, interaction(Lt,soil), mean),0),
round(tapply(cc, interaction(Lt,soil), se),0)))
with(co2.cum[!(co2.cum$exp=="exp2"),], list(round(tapply(cc, interaction(treat,soil), mean),0),
round(tapply(cc, interaction(treat,soil), se),0)))
co2.index$Lt <- revalue(co2.index$treat, c(Lt=1, int=1, Fc=0, C=0))
co2.index$Fc <- revalue(co2.index$treat, c(Lt=0, int=1, Fc=1, C=0))
co2.cum <- as.data.frame(cbind(co2.index[c(1:56),][-c(8,22),], co2.cum))
ew.bm <- read.delim("V1_worms_biomass.txt")
col.pop <- read.delim("V1_col_population.txt")
ew.iso <- read.delim("V1_worms_isotopes.txt")
col.iso <- read.delim("V1_col_isotopes.txt")
n2o.ppb <- read.delim("V1_N2Oppb.txt")
co2.ppm <- read.delim("V1_CO2ppm.txt")
gasflow <- read.delim("V1_Gasflow.txt")
fig2 <- read.delim("V1_Fig_2_data.txt")
gas15 <- read.delim("V1_15Ngas.txt")
isom.data.all <- read.delim("V1_Isotopomere.txt")
co2.index <- co2.ppm[,1:4]
co2.index$treat <- factor(co2.index$treat, levels=c("Lt", "Fc", "int", "C"))
co2.blanks <- co2.ppm[57:59,5:19]
co2.ppm <- co2.ppm[1:56,5:19]
# mean for blanks
co2.blanks.mean=matrix(rep(0,15),1)
for (i in 1:15)
{a=mean(co2.blanks[,i])
co2.blanks.mean[1,i]=a
}
# subtract blanks from MC measurements
for (i in 1:15)
{for (j in 1:56)
{co2.ppm[j,i] = co2.ppm[j,i]-co2.blanks.mean[,i]
}
}
co2.ppm[co2.ppm<0] = 0
# multiplication with gasflow
co2.prod=co2.ppm*gasflow[,5:19]*10^-6*60 #[ml/h]  ### ppm beachten, zeitumrechnen
### umrechnen von ml auf ?g
co2.prod=co2.prod*44/22.4*1000 #[?g/h]
### auf das Bodengewicht beziehen;  soil dry weight: 1080g
co2.bod=co2.prod/1.080  #[?g/(kg h)
### calculate co2-N, Anteil an molarer Masse 28/44
co2=co2.bod*12/44  #[?g/(kg h)]
Kopf=c("Tag 1","Tag 3","Tag 5","Tag 7","Tag 11","Tag 15","Tag 18","Tag 21","Tag 25","Tag 28","Tag 32","Tag 35","Tag 39","Tag 42","Tag 48")
#Treatment code
co2.index$code <- with(co2.index, factor(interaction(treat,soil,experiment), levels= c("Lt.Loam.exp1", "int.Loam.exp1", "Fc.Loam.exp1", "C.Loam.exp1","Lt.Sand.exp1","int.Sand.exp1","Fc.Sand.exp1","C.Sand.exp1", "Lt.Loam.exp2","int.Loam.exp2","Fc.Loam.exp2","C.Loam.exp2","Lt.Sand.exp2","int.Sand.exp2","Fc.Sand.exp2","C.Sand.exp2")))
co2 <- cbind(code=co2.index[1:56,5], co2)
# MK8 und MK22 l?schen weil da Lt tot
co2.red=co2[c(-8,-22),]
co2.red <- droplevels(co2.red)
str(co2.red)
#### MW nach Treatment bilden ProdRate ####
co2.means=matrix(rep(0,240),16)
for (j in 2:16)
{a=tapply(co2.red[,j],co2.red[,1],mean)
co2.means[,(j-1)]=a
}
colnames(co2.means)<-dimnames(co2[,2:16])[[2]]
co2.means <- data.frame(co2.means)
co2.means <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.means)
head(co2.means)
#### Standardfehler ProdRate ####
co2.se=matrix(rep(0,240),16)
for (j in 2:16)
{b=tapply(co2.red[,j],co2.red[,1],se)
co2.se[,(j-1)]=b
}
colnames(co2.se)<-dimnames(co2[,2:16])[[2]]
co2.se <- data.frame(co2.se)
co2.se <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.se)
head(co2.se)
#### means with standard error co2 ####
co2.means2=round(co2.means[,4:18],2)
co2.se2=round(co2.se[,4:18],2)
co2.mean.se=matrix(rep(0,240),16)
for (i in 1:16)
{for (j in 1:15)
{a=paste(co2.means2[i,j],"?",co2.se2[i,j])
co2.mean.se[i,j]=a
}
}
colnames(co2.mean.se)<-dimnames(co2[,2:16])[[2]]
co2.mean.se <- data.frame(co2.mean.se)
co2.mean.se <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.mean.se)
head(co2.se)
# Function for Bland Altman Plot
#------------------------------------
baplot <- function(m1, m2, ...) {
# m1 and m2 are the measurements
means <- (m1 + m2) / 2
diffs <- m1 - m2
mdiff <- mean(diffs)
sddiff <- sd(diffs)
# Compute the figure limits
ylimh <- mdiff + 3 * sddiff
yliml <- mdiff - 3 * sddiff
# Plot data
plot(diffs ~ means, xlab = "Average values",
ylab = "Differences", ylim = c(yliml, ylimh), ...)
abline(h = mdiff) # Center line
# Standard deviations lines
abline(h = mdiff + 1.96 * sddiff, lty = 2)
abline(h = mdiff - 1.96 * sddiff, lty = 2)
}
# Function for layout
#-------------------------------------
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
# Function for Standard error
#----------------------------
se <- function(x) sqrt(var(x)/length(x))
mytheme =
theme_bw() +
theme(strip.background = element_rect(color = "grey", fill="black", size=0.1),
strip.text.x = element_text(size=8,  colour="white", face="italic"),
strip.text.y = element_text(size=8,  colour="white", face="italic"),
axis.text.x = element_text(size=7),
axis.title.x = element_text(size=8,face="bold", family="Times New Roman"),
axis.text.y = element_text(size=7),
axis.title.y = element_text(size=8, family="Times New Roman"),
axis.line = element_line(size=0.25),
axis.ticks = element_line(size=0.25),
plot.title = element_text(size=11,face="bold", family="Times New Roman"),
panel.margin = unit(0, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", size=0.2, fill=NA),
legend.key=element_blank(),
legend.background=element_blank(),
legend.text=element_text(size=8,face="italic", family="Times New Roman"),
legend.title=element_text(size=8))
ew.bm <- read.delim("V1_worms_biomass.txt")
col.pop <- read.delim("V1_col_population.txt")
ew.iso <- read.delim("V1_worms_isotopes.txt")
col.iso <- read.delim("V1_col_isotopes.txt")
n2o.ppb <- read.delim("V1_N2Oppb.txt")
co2.ppm <- read.delim("V1_CO2ppm.txt")
gasflow <- read.delim("V1_Gasflow.txt")
fig2 <- read.delim("V1_Fig_2_data.txt")
gas15 <- read.delim("V1_15Ngas.txt")
isom.data.all <- read.delim("V1_Isotopomere.txt")
co2.index <- co2.ppm[,1:4]
co2.index$treat <- factor(co2.index$treat, levels=c("Lt", "Fc", "int", "C"))
co2.blanks <- co2.ppm[57:59,5:19]
co2.ppm <- co2.ppm[1:56,5:19]
# mean for blanks
co2.blanks.mean=matrix(rep(0,15),1)
for (i in 1:15)
{a=mean(co2.blanks[,i])
co2.blanks.mean[1,i]=a
}
# subtract blanks from MC measurements
for (i in 1:15)
{for (j in 1:56)
{co2.ppm[j,i] = co2.ppm[j,i]-co2.blanks.mean[,i]
}
}
co2.ppm[co2.ppm<0] = 0
# multiplication with gasflow
co2.prod=co2.ppm*gasflow[,5:19]*10^-6*60 #[ml/h]  ### ppm beachten, zeitumrechnen
### umrechnen von ml auf ?g
co2.prod=co2.prod*44/22.4*1000 #[?g/h]
### auf das Bodengewicht beziehen;  soil dry weight: 1080g
co2.bod=co2.prod/1.080  #[?g/(kg h)
### calculate co2-N, Anteil an molarer Masse 28/44
co2=co2.bod*12/44  #[?g/(kg h)]
Kopf=c("Tag 1","Tag 3","Tag 5","Tag 7","Tag 11","Tag 15","Tag 18","Tag 21","Tag 25","Tag 28","Tag 32","Tag 35","Tag 39","Tag 42","Tag 48")
#Treatment code
co2.index$code <- with(co2.index, factor(interaction(treat,soil,experiment), levels= c("Lt.Loam.exp1", "int.Loam.exp1", "Fc.Loam.exp1", "C.Loam.exp1","Lt.Sand.exp1","int.Sand.exp1","Fc.Sand.exp1","C.Sand.exp1", "Lt.Loam.exp2","int.Loam.exp2","Fc.Loam.exp2","C.Loam.exp2","Lt.Sand.exp2","int.Sand.exp2","Fc.Sand.exp2","C.Sand.exp2")))
co2 <- cbind(code=co2.index[1:56,5], co2)
# MK8 und MK22 l?schen weil da Lt tot
co2.red=co2[c(-8,-22),]
co2.red <- droplevels(co2.red)
str(co2.red)
#### MW nach Treatment bilden ProdRate ####
co2.means=matrix(rep(0,240),16)
for (j in 2:16)
{a=tapply(co2.red[,j],co2.red[,1],mean)
co2.means[,(j-1)]=a
}
colnames(co2.means)<-dimnames(co2[,2:16])[[2]]
co2.means <- data.frame(co2.means)
co2.means <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.means)
head(co2.means)
#### Standardfehler ProdRate ####
co2.se=matrix(rep(0,240),16)
for (j in 2:16)
{b=tapply(co2.red[,j],co2.red[,1],se)
co2.se[,(j-1)]=b
}
colnames(co2.se)<-dimnames(co2[,2:16])[[2]]
co2.se <- data.frame(co2.se)
co2.se <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.se)
head(co2.se)
#### means with standard error co2 ####
co2.means2=round(co2.means[,4:18],2)
co2.se2=round(co2.se[,4:18],2)
co2.mean.se=matrix(rep(0,240),16)
for (i in 1:16)
{for (j in 1:15)
{a=paste(co2.means2[i,j],"?",co2.se2[i,j])
co2.mean.se[i,j]=a
}
}
colnames(co2.mean.se)<-dimnames(co2[,2:16])[[2]]
co2.mean.se <- data.frame(co2.mean.se)
co2.mean.se <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.mean.se)
head(co2.se)
#### kumuliertes N.co2 ####
code <- co2.red[,1]
co2.red <- co2.red[,-1]
days=c(1,3,5,7,11,15,18,21,25,28,32,35,39,42,48)
co2.rz=rbind(days,co2.red)
#co2 between two sampling dates
co2.btw=matrix(rep(0,756),54)
for (i in 2:55)
{for (j in 1:14)
{Zeit=(co2.rz[1,(j+1)]-co2.rz[1,j])*24  #*24da Zeit d in std umgerechnet werden muss
a=Zeit*co2.rz[i,j]+0.5*Zeit*(co2.rz[i,(j+1)]-co2.rz[i,j])
co2.btw[(i-1),j]=a
}
}
# cumulative co2 for all samples
co2.cum=matrix(rep(0,756),54)
for (i in 1:54) {
for (j in 1:14) {
a=sum(co2.btw[i,1:j])
co2.cum[i,j]=a
}
}
colnames(co2.cum)<-days[-1]
cbind(co2.index[-c(8,22,57:59),],co2.cum)
# Means for treatments
co2.btw.mean=matrix(rep(0,224),16) #Matrix f?r MW der kum co2 Werte
for (j in 1:14)  #MW bilden
{a=tapply(co2.btw[,j],code,mean)
co2.btw.mean[,j]=a
}
# Standard error
co2.btw.se=matrix(rep(0,224),16) #Matrix f?r StdFehler der kum co2 Werte
for (j in 1:14)  #SE bilden
{a=tapply(co2.btw[,j],code,se)
co2.btw.se[,j]=a
}
# summed
co2.cum.mean=matrix(rep(0,224),16)   #Matrix f?r kum n20 ?ber die zeit
for (i in 1:16)
{for (j in 1:14)
{a=sum(co2.btw.mean[i,1:j])
co2.cum.mean[i,j]=a
}
}
colnames(co2.cum.mean) <- days[-1]
co2.cum.mean <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.cum.mean)
##### Kum- co2: Std.Fehler durch Fehlerfortpflanzung ####
co2.cum.se=matrix(rep(0,224),16)   #Matrix f?r stdfehler fortpflanzung kum n20 ?ber die zeit
for (i in 1:16)
{for (j in 1:14)
{a=sqrt(sum((co2.btw.se[i,1:j])^2))
co2.cum.se[i,j]=a
}
}
colnames(co2.cum.se) <- days[-1]
co2.cum.se <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.cum.se)
# for plots use co2.cum.mean ans co2.cum.se
# for analysis use co2.cum
# data = co2.cum
co2.index$Lt <- revalue(co2.index$treat, c(Lt=1, int=1, Fc=0, C=0))
co2.index$Fc <- revalue(co2.index$treat, c(Lt=0, int=1, Fc=1, C=0))
co2.cum <- as.data.frame(cbind(co2.index[c(1:56),][-c(8,22),], co2.cum))
colnames(co2.cum)[21] <- "cc"
colnames(co2.cum)[4] <- "exp"
co2.cum <- droplevels(co2.cum)
co2.cum.org <- co2.cum
#co2.cum <- co2.cum.org
co2.cum <- co2.cum[-1,]
co2.cum <- co2.cum[-1,]
### Experiment 1
# multimodel averaging
x <- c("Lt","Fc","exp","soil")
cc.0 <- lm(cc~Lt*Fc*soil, co2.cum[!(co2.cum$exp=="exp2"),])
#t(combn(x,3))
cc.1 <- lm(cc~Lt*Fc, co2.cum[!(co2.cum$exp=="exp2"),])
cc.2 <- lm(cc~Lt*soil, co2.cum[!(co2.cum$exp=="exp2"),])
cc.3 <- lm(cc~Fc*soil, co2.cum[!(co2.cum$exp=="exp2"),])
#t(combn(x,2))
cc.4 <- lm(cc~Lt, co2.cum[!(co2.cum$exp=="exp2"),])
cc.5 <- lm(cc~Fc, co2.cum[!(co2.cum$exp=="exp2"),])
cc.6 <- lm(cc~soil, co2.cum[!(co2.cum$exp=="exp2"),])
cc.7 <- lm(cc~1, co2.cum[!(co2.cum$exp=="exp2"),])
AICctab(cc.0,  cc.1,  cc.2,  cc.3,  cc.4,  cc.5,  cc.6,  cc.7)
#as.character(rep("cc",c(1:15)))
#x <- factor(paste("cc",".",c(0:15),",",sep=""), levels=)
#print(x)
#x <- factor(paste("cc",".",c(0:15)," <- ",sep=""), levels=)
#as.data.frame(x)
summary.aov(cc.2)
summary.aov(cc.0)
par(mfrow=c(2,2))
plot(cc.0)
par(mfrow=c(1,1))
boxcox(cc.0, lambda=c(-50,50,5))
locator(1)
cc.0 <- update(cc.0,I(cc*10^-3)~.)
summary.aov(cc.0)
par(mfrow=c(2,2))
plot(cc.0)
cc.aov2 <- aov(cc~Lt*soil*Fc, co2.cum[!(co2.cum$exp=="exp2"),])
cc.aov2 <- update(cc.aov2,I(cc*10^-3)~.)
TukeyHSD(cc.aov2)
cc.int <- with(co2.cum[!(co2.cum$exp=="exp2"),], interaction(soil,treat)) # Double interaction factor
cc.aov3 <- update(cc.aov2,.~cc.int)
HSD.test(cc.aov3, "cc.int", group=TRUE, console=TRUE)
txt.cc = expression(paste("Carbon Dioxide", CO[2]," [mg ",CO[2],"-C ",kg^-1,"]"))
ggplot(co2.cum[!(co2.cum$exp=="exp2"),], aes(x=treat, y=cc), family="Arial") +
stat_boxplot(geom="errorbar", coef=1.5, lwd=0.2) +
geom_boxplot(fill="grey", lwd=0.2, outlier.size=0.4, outlier.shape=21) +
facet_grid( .~ soil , scales="free", space="free",labeller=label_parsed) +
ylab(txt.cc) +
xlab("L. terrestris") +
#scale_x_discrete(labels=c("absent", "present")) +
ggtitle("Experiment 1") +
mytheme
cc.int <- with(co2.cum[!(co2.cum$exp=="exp2"),], interaction(soil,Lt)) # Double interaction factor
cc.aov3 <- update(cc.aov2,.~cc.int)
HSD.test(cc.aov3, "cc.int", group=TRUE, console=TRUE)
with(co2.cum[!(co2.cum$exp=="exp2"),], list(round(tapply(cc, interaction(treat,soil), mean),0),
round(tapply(cc, interaction(treat,soil), se),0)))
with(co2.cum[!(co2.cum$exp=="exp2"),], list(round(tapply(cc, interaction(Lt,soil), mean),0),
round(tapply(cc, interaction(Lt,soil), se),0)))
### Experiment 1
# multimodel averaging
x <- c("Lt","Fc","exp","soil")
cc.0 <- lm(cc~Lt*Fc*soil, co2.cum[!(co2.cum$exp=="exp1"),])
#t(combn(x,3))
cc.1 <- lm(cc~Lt*Fc, co2.cum[!(co2.cum$exp=="exp1"),])
cc.2 <- lm(cc~Lt*soil, co2.cum[!(co2.cum$exp=="exp1"),])
cc.3 <- lm(cc~Fc*soil, co2.cum[!(co2.cum$exp=="exp1"),])
#t(combn(x,2))
cc.4 <- lm(cc~Lt, co2.cum[!(co2.cum$exp=="exp1"),])
cc.5 <- lm(cc~Fc, co2.cum[!(co2.cum$exp=="exp1"),])
cc.6 <- lm(cc~soil, co2.cum[!(co2.cum$exp=="exp1"),])
cc.7 <- lm(cc~1, co2.cum[!(co2.cum$exp=="exp1"),])
AICctab(cc.0,  cc.1,  cc.2,  cc.3,  cc.4,  cc.5,  cc.6,  cc.7)
#as.character(rep("cc",c(1:15)))
#x <- factor(paste("cc",".",c(0:15),",",sep=""), levels=)
#print(x)
#x <- factor(paste("cc",".",c(0:15)," <- ",sep=""), levels=)
#as.data.frame(x)
summary.aov(cc.2)
par(mfrow=c(2,2))
plot(cc.2)
par(mfrow=c(1,1))
boxcox(cc.2)
# locator(1)
fligner.test(cc~interaction(Lt,soil), co2.cum[!(co2.cum$exp=="exp1"),])
cc.aov2 <- aov(cc~Lt*soil, co2.cum[!(co2.cum$exp=="exp1"),])
TukeyHSD(cc.aov2)
cc.int <- with(co2.cum[!(co2.cum$exp=="exp1"),], interaction(soil,Lt)) # Double interaction factor
cc.aov3 <- update(cc.aov2,.~cc.int)
HSD.test(cc.aov3, "cc.int", group=TRUE, console=TRUE)
txt.cc = expression(paste("Carbon Dioxide", CO[2]," [mg ",CO[2],"-C ",kg^-1,"]"))
ggplot(co2.cum[!(co2.cum$exp=="exp1"),], aes(x=Lt, y=cc), family="Arial") +
stat_boxplot(geom="errorbar", coef=1.5, lwd=0.2) +
geom_boxplot(fill="grey", lwd=0.2, outlier.size=0.4, outlier.shape=21) +
facet_grid( .~ soil , scales="free", space="free",labeller=label_parsed) +
ylab(txt.cc) +
xlab("L. terrestris") +
scale_x_discrete(labels=c("absent", "present")) +
ggtitle("Experiment 2") +
mytheme
cc.int <- with(co2.cum[!(co2.cum$exp=="exp1"),], interaction(soil,Lt,Fc)) # Double interaction factor
cc.aov3 <- update(cc.aov2,.~cc.int)
HSD.test(cc.aov3, "cc.int", group=TRUE, console=TRUE)
with(co2.cum[!(co2.cum$exp=="exp1"),], list(round(tapply(cc, interaction(Lt,soil), mean),0),
round(tapply(cc, interaction(Lt,soil), se),0)))
with(co2.cum[!(co2.cum$exp=="exp2"),], list(round(tapply(cc, interaction(Lt,soil), mean),0),
round(tapply(cc, interaction(Lt,soil), se),0)))
View(co2.cum)
with(co2.cum[!(co2.cum$exp=="exp1"),], list(round(tapply(cc, interaction(Lt,soil), mean),0),
round(tapply(cc, interaction(Lt,soil), se),0)))
with(co2.cum[!(co2.cum$exp=="exp2"),], list(round(tapply(cc, interaction(Lt,soil), mean),0),
round(tapply(cc, interaction(Lt,soil), se),0)))
isom.data.600 <- with(isom.data.all, isom.data.all[N2O.conc > 600,])
isom.data.600$treat <- factor(isom.data.600$treat, levels=c("Lt", "Fc", "Int", "Control"))
isom.test  <-  cbind(isom.data.600$sp, isom.data.600$d18o)
isom.mv1 <- manova(isom.test~interaction(Sampleset,soil, treat),isom.data.600)
summary(isom.mv1, test="Pillai")
summary.aov(isom.mv1)
isom.test  <-  cbind(isom.data.600$sp, isom.data.600$d18o)
isom.mv1 <- manova(isom.test~interaction(Sampleset,soil,treat),isom.data.600)
summary(isom.mv1, test="Pillai")
summary.aov(isom.mv1)
isom.mv1 <- manova(isom.test~Sampleset*soil*treat),isom.data.600)
isom.mv1 <- manova(isom.test~Sampleset*soil*treat,isom.data.600)
summary(isom.mv1, test="Pillai")
summary.aov(isom.mv1)
lsm <- lsmeans::lsmeans(isom.mv1, ~ treat|Sampleset)
lsm <- lsmeans::lsmeans(isom.mv1, ~ treat|Sampleset, isom.data.600)
isom.mv1 <- manova(isom.test~Sampleset*soil*treat,isom.data.600)
lsm <- lsmeans::lsmeans(isom.mv1, ~ treat|Sampleset, isom.data.600)
lsm <- lsmeans::lsmeans(isom.mv1, ~ treat, isom.data.600)
isom.mv1 <- manova(isom.test~interaction(soil,Sampleset)*treat,isom.data.600)
summary(isom.mv1, test="Pillai")
summary.aov(isom.mv1)
View(isom.data.600)
isom.mv1 <- manova(isom.test~Fc,isom.data.600)
summary(isom.mv1, test="Pillai")
isom.mv1 <- manova(isom.test~Fc*Sampleset,isom.data.600)
summary(isom.mv1, test="Pillai")
summary.aov(isom.mv1)
isom.mv1 <- manova(isom.test~Fc + Lt + soil + Sampleset,isom.data.600)
summary(isom.mv1, test="Pillai")
summary.aov(isom.mv1)
isom.mv1 <- manova(isom.test~interaction(treat,soil,Sampleset),isom.data.600)
summary(isom.mv1, test="Pillai")
lsm <- lsmeans(isom.mv1, ~ interaction(treat,soil,Sampleset))
library(lsmeans)
lsm <- lsmeans(isom.mv1, ~ interaction(treat,soil,Sampleset))
isom.aov1 <- aov(sp~interaction(treat,soil,Sampleset),isom.data.600)
summary(isom.aov1)
TukeyHSD(isom.aov1)
isom.aov1 <- aov(sp~treat*soil*Sampleset,isom.data.600)
summary(isom.aov1)
TukeyHSD(isom.aov1)
isom.aov2 <- aov(d18o~treat*soil*Sampleset,isom.data.600)
summary(isom.aov2)
lsm <- lsmeans(isom.aov1, ~ treat|Sampleset)
lsm <- lsmeans(isom.aov1, ~ treat|Sampleset*soil)
lsm
isom.data.600$Sampleset <- factor(isom.data.600$Sampleset)
isom.test  <-  cbind(isom.data.600$sp, isom.data.600$d18o)
isom.mv1 <- manova(isom.test~interaction(Sampleset,soil),isom.data.600)
summary(isom.mv1, test="Pillai")
summary.aov(isom.mv1)
isom.mv1 <- manova(isom.test~treat*soil*Sampleset),isom.data.600)
isom.mv1 <- manova(isom.test~treat*soil*Sampleset,isom.data.600)
summary(isom.mv1, test="Pillai")
summary.aov(isom.mv1)
isom.aov1 <- aov(sp~treat*soil*Sampleset,isom.data.600)
summary(isom.aov1)
TukeyHSD(isom.aov1)
isom.aov2 <- aov(d18o~treat*soil*Sampleset,isom.data.600)
summary(isom.aov2)
TukeyHSD(isom.aov2)
library(lsmeans)
lsm <- lsmeans(isom.aov1, ~ treat|Sampleset*soil)
lsm
summary(lsm)
x1 <- contrast(lsm, "pairwise")
summary(x1)
View(isom.data.all)
lsm <- lsmeans(isom.aov2, ~ treat|Sampleset*soil)
x1 <- contrast(lsm, "pairwise")
summary(x1)
isom.mv1 <- manova(isom.test~treat*soil*Sampleset,isom.data.600)
summary(isom.mv1, test="Pillai")
isom.mv1 <- manova(isom.test~interaction(treat*soil*Sampleset),isom.data.600)
isom.mv1 <- manova(isom.test~interaction(treat,soil,Sampleset),isom.data.600)
summary(isom.mv1, test="Pillai")
summary.aov(isom.mv1)
isom.mv1 <- manova(isom.test~treat*interaction(soil,Sampleset),isom.data.600)
summary(isom.mv1, test="Pillai")
summary.aov(isom.mv1)
lsm <- lsmeans(isom.aov1, ~ treat|Sampleset+soil)
x1 <- contrast(lsm, "pairwise")
summary(x1)
lsm <- lsmeans(isom.aov1, ~ treat|Sampleset)
x1 <- contrast(lsm, "pairwise")
summary(x1)
lsm <- lsmeans(isom.aov1, ~ treat|soil)
x1 <- contrast(lsm, "pairwise")
summary(x1)
lsm <- lsmeans(isom.aov1, ~ treat*Sampleset*soil)
x1 <- contrast(lsm, "pairwise")
summary(x1)
lsm <- lsmeans(isom.aov2, ~ treat*Sampleset*soil)
x1 <- contrast(lsm, "pairwise")
summary(x1)
isom.mv1 <- manova(isom.test~treat*interaction(soil,Sampleset),isom.data.600)
summary(isom.mv1, test="Pillai")
