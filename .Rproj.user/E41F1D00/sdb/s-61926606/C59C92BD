{
    "contents" : "---\ntitle: \"V1 Statistical Analysis\"\nauthor: \"Quentin Schorpp\"\ndate: \"Wednesday, September 17, 2014\"\noutput: html_document\n---\n\nThis is the Analysis of a microcosm experiment performed at the Th?nen Institute of Biodiversity, Braunschweig. The Experiment aimed to investigate the influence of soil fauna groups Lumbricidae (*L. terrestris*) and Collembola (*F. candida*) on the microbial activity involved in gaseous nitrogen emissions. The data consists of three different qualities of measurement. First emissions of N[2]O and CO[2] were measured continously during the whole duration of the experiment in intervals lasting several days. That data is in units of ppb or ppm. Second at four dates the microcosms were incubated with artificial atmosphere and 15N isotopic signatures of N2O and N2 were measured. Third at one particular date samples for isotopomere measurements were taken.\n\n#### Set working directory #\n```{r working directory}\n #setwd(\"E:/Quentin_Schorpp_20.11.2014/Arbeitsprozess/V1_Analysis\")\n setwd(\"D:/Quentin Schorpp/Arbeitsprozess/V1_Analysis\")\n#setwd(choose.dir())\n```\n#### Load required packages#\n```{r packages, warning=FALSE, message=FALSE}\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(grid)\nlibrary(plyr)\nlibrary(MethComp)\nlibrary(agricolae)\nlibrary(foreign)\nlibrary(multcomp)\nlibrary(gridExtra)\nlibrary(extrafont)\nlibrary(effects)\nlibrary(MASS)\nlibrary(splitstackshape)\nlibrary(bbmle)\n````\n  \n  \n#### Additional Functions:\n```{r Additional Functions, echo=FALSE}\n# Function for Bland Altman Plot\n#------------------------------------\nbaplot <- function(m1, m2, ...) {\n  # m1 and m2 are the measurements\n  means <- (m1 + m2) / 2\n  diffs <- m1 - m2\n  mdiff <- mean(diffs)\n  sddiff <- sd(diffs)\n  # Compute the figure limits\n  ylimh <- mdiff + 3 * sddiff\n  yliml <- mdiff - 3 * sddiff\n  # Plot data\n  plot(diffs ~ means, xlab = \"Average values\",\n       ylab = \"Differences\", ylim = c(yliml, ylimh), ...)\n  abline(h = mdiff) # Center line\n  # Standard deviations lines\n  abline(h = mdiff + 1.96 * sddiff, lty = 2)\n  abline(h = mdiff - 1.96 * sddiff, lty = 2)\n}\n\n# Function for layout\n#-------------------------------------\nvplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)\n\n# Function for Standard error\n#----------------------------\nse <- function(x) sqrt(var(x)/length(x))\n```\n  \n  \n#### ggplot2 - Theme\n```{r mytheme, echo=FALSE}\nmytheme = \n  theme_bw() + \n  theme(strip.background = element_rect(color = \"grey\", fill=\"black\", size=0.1),\n        strip.text.x = element_text(size=8,  colour=\"white\", face=\"italic\"),\n        strip.text.y = element_text(size=8,  colour=\"white\", face=\"italic\"),\n        axis.text.x = element_text(size=7),\n        axis.title.x = element_text(size=8,face=\"bold\", family=\"Times New Roman\"),\n        axis.text.y = element_text(size=7),\n        axis.title.y = element_text(size=8, family=\"Times New Roman\"),\n        axis.line = element_line(size=0.25),\n        axis.ticks = element_line(size=0.25),\n        plot.title = element_text(size=11,face=\"bold\", family=\"Times New Roman\"),\n        panel.margin = unit(0, \"lines\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_rect(colour=\"black\", size=0.2, fill=NA),\n        legend.key=element_blank(),\n        legend.background=element_blank(),\n        legend.text=element_text(size=8,face=\"italic\", family=\"Times New Roman\"),\n        legend.title=element_text(size=8))\n```\n\n#### Load data\n```{r Load data}\new.bm <- read.delim(\"V1_worms_biomass.txt\")\ncol.pop <- read.delim(\"V1_col_population.txt\")\new.iso <- read.delim(\"V1_worms_isotopes.txt\")\ncol.iso <- read.delim(\"V1_col_isotopes.txt\")\nn2o.ppb <- read.delim(\"V1_N2Oppb.txt\")\nco2.ppm <- read.delim(\"V1_CO2ppm.txt\")\ngasflow <- read.delim(\"V1_Gasflow.txt\")\nfig2 <- read.delim(\"V1_Fig_2_data.txt\")\ngas15 <- read.delim(\"V1_15Ngas.txt\")\nisom.data.all <- read.delim(\"V1_Isotopomere.txt\")\n```\n  \n  \n  \n# 1. Eathworm Biomass\nEarthworm biomass was measured in g after earthworm guts were voided. Mesurements took place before and after the experiment.\nDuring the Experiment four Individual of L. terrestris died in Microcosms with the interaction Treatment in the 15N experimental part / approach.\n\n### Survival Rates:\n```{r Ew Survival rates}\nLt.Exp1  = 100*(1-4/(4*2*2*2)) # = 87.5 %\nLt.Exp2  = 100*(1-0/(3*2*2*2)) # = 100 %\nLt.total = 100*(1-4/((4*2*2*2)+(3*2*2*2))) # = 92.86 %\n# 100*(1-dead worms/all worms)\n```\n\n### Data distribution\n```{r Ew-biomass, echo=FALSE}\n# Data Exploration\nstr(ew.bm)\n\n# Ranges\nwith(ew.bm, list(length(before), range(before),range(after)))\nbs.worms1 = binsize1 = diff(range(ew.bm$before))/26\nbs.worms2 = binsize2 = diff(range(ew.bm$after))/26\nbs.worms3 = binsize3 = diff(range(ew.bm$diff))/length(ew.bm$diff)\n\n\n# Histograms Before/After\new.bm.melt = melt(ew.bm[,-c(7,8)], id.vars=c(1:4))\new.bm.p1 <- ggplot(ew.bm.melt, aes(x=value)) + \n  geom_histogram( binwidth = bs.worms1, fill=\"lightblue3\", colour=\"black\") + \n  geom_line(stat=\"density\") +\n  xlim(6.5,11) + \n  xlab(\"Biomass [g]\") +\n  ylab(\"Frequency\") +\n  ggtitle(\"Histograms EW-biomass \\n Before/After\") +\n  facet_grid(variable ~ .) + mytheme\n\n# normally distributed diferences?\new.bm.p2 <- ggplot(ew.bm, aes(x=diff)) +\n  geom_histogram(binwidth = bs.worms3, fill=\"lightblue3\", colour=\"black\") + \n  geom_line(stat=\"density\") + \n  xlab(\"differences [g]\") + \n  ylab(\"Frequency\") + \n  ggtitle(\"Histogram of differences\") + mytheme\n\n# One figure in row 1 and two figures in row 2\ngrid.newpage()\npushViewport(viewport(layout = grid.layout(1, 2)))\nprint(ew.bm.p1, vp = vplayout(1, 1))\nprint(ew.bm.p2, vp = vplayout(1, 2))\n```\n### Analysis\n``` {r Analysis1, echo=FALSE, fig.width=8, fig.height=7}\nshapiro.test(ew.bm$diff) # kann bei diesem Test eine Signifikanz (p < 0.05) festgestellt werden, so liegt keine Normalverteilung vor.\n\n\n#ggplot with qqnorm and qqline\nvec <- ew.bm$diff\ny <- quantile(vec[!is.na(vec)], c(0.25, 0.75))\nx <- qnorm(c(0.25, 0.75))\nslope <- diff(y)/diff(x)\nint <- y[1L] - slope * x[1L]\nd <- data.frame(resids = vec)\n \new.bm.p3 <- ggplot(d, aes(sample = resids)) + \n  stat_qq() + \n  geom_abline(slope = slope, intercept = int, col=\"red\") + \n  mytheme\n# Bland Altman plot\new.bm$diff.mean <- (ew.bm$after+ew.bm$before)/2\ndf2 <- ddply(ew.bm,.(rep(\"a\", length(diff))),summarise,mean=mean(diff, na.rm = TRUE),\n                                             sd=sd(diff, na.rm = TRUE))\new.bm.p4 <- ggplot(ew.bm, aes(diff.mean, diff)) + \n  geom_point(na.rm=TRUE) + \n  geom_hline(data=df2,aes(yintercept=c(round(mean,3),\n                                       round(mean+2*sd,3),\n                                       round(mean-2*sd,3))),\n                      linetype=c(1,2,2), color='blue') +\n  mytheme\n\ngrid.newpage()\npushViewport(viewport(layout = grid.layout(1, 2)))\nprint(ew.bm.p3, vp = vplayout(1, 1))\nprint(ew.bm.p4, vp = vplayout(1, 2))\n\n\n# ew.bm.meth <- Meth(ew.bm[,c(5,6)], y=c(\"after\",\"before\")) # it was necessary, that no other variables from ew.bm are in the Meth object!!!\n# BA.plot(ew.bm.meth, axlim=c(8,10), diflim=c(-3,1))\n\n# t.test\n# with(ewfw, t.test(diff))\n# with(ew.bm, t.test(before, after, paired=T, alternative=\"greater\"))\nwith(ew.bm, t.test(after, before, paired=T, alternative=\"less\")) \n# Defining alt=\"less\", means check whether the mean of the values contained in the vector a is less of the mean of the values contained in the vector b (t.test(a,b,paired=TRUE, alt=\"less\"))\n\n\n# Were Changes in L. terrestris Biomass affected by Treatments?\nsummary(aov(diff ~ treat*soil*exp, data=ew.bm))\n# NO it was not.\n\nlist(mean(ew.bm$before),\n     se(ew.bm$before),\n     mean(ew.bm$after),\n     se(ew.bm$after))\n```\n  \n  \n  \n#2. Collembolan Population growth\nCollembolans grew very well during the experiment and reached densities hardly observed in agricultural systems.\n  \n##### Growth Factor\n```{r Collembolan population}\ncol.pop.initial = 238 #Ind/MC\ncol.pop.growth = col.pop$surface/238\ncol.pop$growth_f = col.pop.growth\n\nrange(col.pop.growth)\nmean(col.pop.growth); se(col.pop.growth)\n```\n\n\n```{r, Boxplots, fig.width=7, fig.height=6, echo=FALSE}\n# Boxplot Graphical Data Exploration\ncol.pop$exp <- revalue(col.pop$exp, c(Exp1=\"Experiment~1\",Exp2=\"Experiment~2\"))\ncol.pop$treat <- revalue(col.pop$treat, c(C =\"F.~candida\",RC=\"Interaction\"))\n\nggplot(col.pop, aes(x= treat, y=surface),labeller=label_parsed) +\n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"light blue\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +\n  ylab(expression(paste(\"Collembolan density [Ind \",MC[surface]^-1,\"]\"))) +\n  xlab(\"Treatment\") +\n  ggtitle(expression(paste(\"Boxplots for collembolan density per \",MC[surface]))) +\n  facet_grid(exp~soil, labeller=label_parsed) + \n  scale_x_discrete(\"Treatment\", labels=expression(italic(F.~candida), Interaction)) +\n  mytheme\n````\n  \nIn 3 out of 4 cases Presence of Lumbricus terrestris led to increased Collembolan population growth. The only exception is the loamy soil treatment in Exp1. Here the opposite was observed.\nFurthermore loamy soil treatments increased collembolan population growth in both experiments compared to sandy soil (`r tapply(col.pop$surface, col.pop$soil,mean)`, Loam, Sand).\nHypothesis: Low Nitrogen content of food material leads to decreased collembolan populations in loamy soil if L. terrestris is present.\n\n### Analysis of Collembolan populations\n```{r Analysis2}\n# Table of means\nwith(col.pop, tapply(surface, list(soil, treat, exp), mean))\n\n# Analysis of variance\ncp.lm1 <- lm(surface ~ treat*soil*exp, data=col.pop);cp.lm1; summary.aov(cp.lm1);summary.lm(cp.lm1)\ncp.lm2 <- lm(surface ~ treat*soil*exp-exp:treat:soil, data=col.pop);cp.lm2; summary.aov(cp.lm2);summary.lm(cp.lm2)\n# Soil and Experiment are significant in the main effects\n# Treatments is significant in interaction with soil and with experiment\n       \n# The coefficients table of summary.lm has as many rows, as there are parameters in the model.The Intercept is the only mean value in the table. The second column contains the unreliability estimates. The firs ROW contains the standard error of a MEAN. The Other four rows contain the standard errors of  the DIFFERENCE between two means. The p-values are misleading, suggesting, wrongly, that there are four significant contrasts for this model.\n# All significant differences are differences to Exp1-Loam-F.candida\n\n    # Effect Sizes of Main Effects\n    plot.design(surface ~ soil*exp*treat-exp:treat:soil, data=col.pop)\n    \n    # The populations were larger in loamy soil\n    with(col.pop, tapply(surface, soil, mean))\n    with(col.pop, tapply(surface, soil, se))\n    \n    # The populations were larger in Experiment 2\n    with(col.pop, tapply(surface, exp, mean))\n    with(col.pop, tapply(surface, exp, se))\n\ncp.aov <- aov(surface ~ soil*exp*treat, data=col.pop)\n      # ANOVA plots\n      par(mfrow=c(2,2))\n      par(mar=c(3,4,1.5,2), mgp=c(1.5,0.5,0))\n      plot(cp.aov)\n      # SST plot after Crawley (R-Book, p.)\n      par(mfrow=c(1,1))\n      with(col.pop, { plot(surface, pch=21, col=\"black\",bg=\"red\")\n                      abline(mean(surface),0, col=\"blue\")\n                      title(\"SST\")\n                      ylab=\"response (surface)\"\n                      for (i in 1:28)\n                        lines(c(i,i), c(surface[i], mean(surface)), col=\"green\")\n            })\nTukeyHSD(cp.aov)\n# Unterschiede zw. den treatments innerhalb desselben Experiments und derselben soil texture sind ALLE nicht significant!!!  \n  \n                # More Multiple Comparisons:\n                # Variant 1:\n                col.pop.int <- cp.int <- with(col.pop, interaction(exp,soil,treat)) # Triple interaction factor\n                col.aov2 <- aov(surface ~ cp.int, data=col.pop)\n                HSD.test(col.aov2, \"cp.int\", group=TRUE, console=TRUE)\n                #Variant 2:  \n                col.tuk1 <- glht(col.aov2, linfct = mcp(cp.int = \"Tukey\"))\n                summary(col.tuk1)          # standard display\n                col.tuk.cld <- cld(col.tuk1)   # letter-based display\n                par(mai=c(1,1,1.1,0.2),\n                    mfrow=c(1,1),\n                    mgp=c(2,1,0),\n                    cex=0.8) # mai specifiec margin size in inches\n                plot(col.tuk.cld, cex=0.5, las=2, col=\"grey\", xaxt=\"n\")\n                axis(1, at=cp.int,labels=FALSE)\n                text(cp.int, labels=cp.int, par(\"usr\")[3], adj=c(1.2,1.2), xpd=TRUE, srt=45, cex=0.8)\n\n\n    # Effect sizes of interactions\n    col.pop.effects <- allEffects(cp.lm2)\n    plot(col.pop.effects, \"treat:soil\")\n    plot(col.pop.effects, \"treat:exp\")\n    plot(col.pop.effects, \"soil:exp\")\n    \n    model.tables(cp.aov, \"means\", se=TRUE)\n    with(col.pop, tapply(surface, list(treat,soil), mean))\n    with(col.pop, tapply(surface, list(treat,soil), se))\n    \n    with(col.pop, tapply(surface, list(treat,exp), mean))\n    with(col.pop, tapply(surface, list(treat,exp), se))\n    \n    with(col.pop, tapply(surface, list(soil,exp), mean))\n    with(col.pop, tapply(surface, list(soil,exp), se))\n\n    col.pop.effects <- allEffects(cp.lm1)\n    plot(col.pop.effects, \"treat:soil:exp\")\n    \n    # Interessieren w?rde mich wie viel gr??er die Populationen im Schnitt in Anwesenheit von L. terrestris waren.\n    # Datensatz zu differenzen zw. Interaktion und Single-Species Treatments\n    # PROBLEM: Welche Mikrokosmen bilden Paare? \n    # Bilden aller paarweise DIfferenzen und/oder nur f?r selbe Faktoren Kombination aus Exp und soil?\n    # Wie subtrahiert man Standardfehler voneinander (gibt T-Test Aufschl?sse?)\n    \n    # Mein reduzierter Versuch:\n    treat.sand.exp1 = a = 9629 - 6319\n    treat.sand.exp2 = b = 18781 - 14766\n    treat.loam.exp2 = c = 11246 - 4487\n    cp.diff.means = c(a,b,c)\n    mean(cp.diff.means); se(cp.diff.means)\n\n```\n\n### Tukey HSD plots Two Way Interactions (optional)\n```{r More Tukey HSD, echo=FALSE, eval=FALSE}\ncp.int <- with(col.pop, interaction(treat, soil))\naov.col1 <- aov(surface ~ cp.int, data=col.pop)\nHSD.test(aov.col1, \"cp.int\", group=TRUE, console=TRUE)\ntuk <- glht(aov.col1, linfct = mcp(cp.int = \"Tukey\"))\nsummary(tuk)          # standard display\ntuk.cld <- cld(tuk)   # letter-based display\nopar <- par(mai=c(1,1,1.5,1))\nplot(tuk.cld, las=2)\npar(opar)\n\ncp.int <- with(col.pop, interaction(exp, soil))\naov.col1 <- aov(surface ~ cp.int, data=col.pop)\nHSD.test(aov.col1, \"cp.int\", group=TRUE, console=TRUE)\ntuk <- glht(aov.col1, linfct = mcp(cp.int = \"Tukey\"))\nsummary(tuk)          # standard display\ntuk.cld <- cld(tuk)   # letter-based display\nopar <- par(mai=c(1,1,1.5,1))\nplot(tuk.cld)\npar(opar)\n\ncp.int <- with(col.pop, interaction(exp, treat))\naov.col1 <- aov(surface ~ cp.int, data=col.pop)\nHSD.test(aov.col1, \"cp.int\", group=TRUE, console=TRUE)\ntuk <- glht(aov.col1, linfct = mcp(cp.int = \"Tukey\"))\nsummary(tuk)          # standard display\ntuk.cld <- cld(tuk)   # letter-based display\nopar <- par(mai=c(1,1,1.5,1))\nplot(tuk.cld)\npar(opar)\n```\n\n# Analysis of 15N enrichment in animal tissue\n## 15N enrichment in L. terrestris\n```{r 15N L. terrestris}\nbs4 <- diff(range(ew.iso$atpercent))/length(ew.iso$atpercent)\nggplot(ew.iso, aes(x=atpercent)) + \n  geom_histogram(binwidth = bs4 , fill=\"lightblue3\", colour=\"black\") + \n  xlab(expression(paste(.^15,\"N atom%\"))) + \n  ylab(\"frequency\") +\n  ggtitle(expression(paste(\"Histogram of\", .^15,\"N Enrichment in tissue of \",italic(L.~terrestris))))\n\n\n# Overlap between Loam and Sand in %\n100*((with(ew.iso[ew.iso$soil==\"S\",], max(atpercent)) - with(ew.iso[ew.iso$soil==\"L\",], min(atpercent)))/with(ew.iso,max(atpercent) - min(atpercent)))\n\nmaxRows <- by(ew.iso, ew.iso$soil, function(X) X[which.max(X$atpercent),])\nminRows <- by(ew.iso, ew.iso$soil, function(X) X[which.min(X$atpercent),])\ndo.call(\"rbind\", maxRows)\ndo.call(\"rbind\", minRows)\n\new.iso.plot <-  qplot(soil, atpercent, colour=treat, data=ew.iso) + \n  geom_point(size=2.5) +\n  annotate(\"text\", x=2,y=1.01+.02, label=\"max=1.01\", vjust=0, col=\"red\", size=4) +\n  annotate(\"text\", x=1,y=0.74+.02, label=\"min=0.74\", vjust=0,col=\"red\", size=4) +\n  xlab(\"Soiltype\") + \n  ylab(expression(paste(.^15,\"N atom%\",sep=\"\"))) + \n  ggtitle(expression(paste(\"Label in \",italic(\"L. terrestris\"))))+\n  scale_x_discrete(breaks=c(\"L\",\"S\"), labels=c(\"Loam\", \"Sand\"))+\n  labs(colour=\"Treatment\")+\n  scale_colour_discrete(labels=c(\"L.terrestris\", \"L. terrestris + F. candida\")) + \n  theme(panel.background= element_rect(fill=\"white\"),\n        panel.grid.major = element_line(colour=\"grey\"),\n        panel.grid.minor = element_line(colour=\"grey\", linetype=\"dashed\", size=0.2),\n        panel.border= element_rect(colour=\"black\", fill=NA, size=1),\n        axis.text = element_text(colour=\"black\", size=rel(1.3)),\n        axis.text.x = element_text(face=\"italic\"),\n        axis.title=element_text(size=rel(1.4)),\n        legend.text=element_text(face=\"italic\"))\new.iso.plot\n````\n\n# Analysis of 15N enrichment in L. terrestris\n```{r Analysis3}\n\nM.ew.iso <- lm(atpercent~treat*soil, data=ew.iso);anova(M.ew.iso);summary(M.ew.iso)\nM.ew.iso <- lm(atpercent~soil, data=ew.iso); anova(M.ew.iso);summary(M.ew.iso)\nlm.influence(M.ew.iso)\ninfluence.measures(M.ew.iso)$is.inf\n\npar(mfrow=c(2,2),\n    mar=c(3,3,3,3))\nplot(M.ew.iso)\n\nshapiro.test(ew.iso$atpercent)\nfligner.test(atpercent~soil, data=ew.iso)\n\nt.test(atpercent~soil, ew.iso)\nt.test(atpercent~soil,ew.iso, alternative=\"greater\")\n\nwith(ew.iso, list( tapply(atpercent, soil, mean),\n                   tapply(atpercent, soil, se)))\n```\nL. terrestris was significantly more enriched in loamy soil, compared to sandy soil 15N in tissue was with 1.04 +/- 0.08 atom% greater than  0.75 +/- 0.08 in sandy soil.\n\n## 15N enrichment in F.candida\n```{r 15N F. candida}\n#Histograms\npar(mfrow=c(2,1))\nhist(col.iso$atpercent)\nhist(col.iso$atpercent, main=\"breaks=12\", breaks=12) # Too narrow --> breaks in Histogram\n\nlist(range(col.iso$atpercent),\nrange(col.iso$atpercent)[2] -\nrange(col.iso$atpercent)[1])\n\n#There's a differnce between the Minima and Maxima of 0.896 atom percent\n# what differnce in atpercent is meaningful?\n\nwith(col.iso, list(median(atpercent),\n                   mean(atpercent))) # median and mean are the same: 6.4 atom percent\n\nicept = median(col.iso$atpercent)\n\ncol.iso.plot <- \n  qplot(soil, atpercent, colour=treat, data=col.iso) + \n  geom_point(size=2.5) + \n  geom_hline(yintercept=icept, linetype=\"dashed\", colour=\"red\") +\n  annotate(\"text\", label=\"Midline Max(Loam) - Min(Sand) y=6.4\", x=1.5, y=6.44, size=4,colour=\"red\") +\n  ggtitle(expression(paste(\"Label in \",italic(\"F. candida\"))))+  \n  xlab(\"soiltexture\") + \n  ylab(expression(paste(.^15,\"N atom%\",sep=\"\"))) + \n  scale_x_discrete(breaks=c(\"L\",\"S\"), labels=c(\"Loam\", \"Sand\"))+\n  scale_colour_discrete(labels=c(\"F.candida\", \"F. candida \\n + L. terrestris\")) + \n  labs(colour=\"Treatment\")+\n  theme(panel.background= element_rect(fill=\"white\"),\n        panel.grid.major = element_line(colour=\"grey\"),\n        panel.grid.minor = element_line(colour=\"grey\", linetype=\"dashed\", size=0.2),\n        panel.border= element_rect(colour=\"black\", fill=NA, size=1),\n        axis.text = element_text(colour=\"black\", size=rel(1.3)),\n        axis.text.x = element_text(face=\"italic\"),\n        axis.title=element_text(size=rel(1.4)),\n        legend.text=element_text(face=\"italic\"))\ncol.iso.plot\n````\n\n```{r Analysis4}\nM.col.iso1 <- with(col.iso, aov(atpercent~treat*soil)); summary(M.col.iso1)\nM.col.iso2 <- with(col.iso, aov(atpercent~soil)); summary(M.col.iso2)\n# What other nutritional source could F. candida have had in Loam?\n          \nanova(M.col.iso1, M.col.iso2)\nAIC(M.col.iso1, M.col.iso2)\n\nM.col.iso3 <- lm(atpercent~soil, data=col.iso)\nlm.influence(M.col.iso3)\ninfluence.measures(M.col.iso3)$is.inf\n\nt.test(atpercent~soil, col.iso, alternative=\"less\")\n\nwith(col.iso, list( tapply(atpercent, soil, mean),\n                   tapply(atpercent, soil, se)))\n\nmean(col.iso$atpercent)\nse(col.iso$atpercent)\n\n```\n\n```{r Figure 15N Enrichment}\norganism <- factor(rep(c(\"italic(L.~terrestris)\", \"italic(F.~candida)\"), each=12), levels=c(\"italic(L.~terrestris)\", \"italic(F.~candida)\"))\new.col.iso <- rbind(ew.iso, col.iso)\new.col.iso$organism <- organism\new.col.iso$soil <- revalue(ew.col.iso$soil, c(L=\"Loam\", S=\"Sand\"))\n\n#long cut way to find number of facets\nlen <- length(levels(ew.col.iso$organism))# *  length(levels(mtcars$am))\nvars <- data.frame(organism=levels(ew.col.iso$organism))\ny = with(ew.col.iso, tapply(atpercent,organism,max)-0.025)\ndat <- data.frame(x = rep(0.5, len), y = y, vars, labs=LETTERS[1:len])\n\nggplot(ew.col.iso, aes(x=soil, y=atpercent), family=\"Arial\") + \n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"grey\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +  \n  facet_grid(organism ~ . , scales=\"free\", space=\"free\",labeller=label_parsed) + \n  ylab(\"atom %\") + \n  xlab(\"soil texture\") + \n  geom_text(aes(x, y, label=labs, group=NULL),data=dat) +\n  # ggtitle(expression(paste(.^15,\"N enrichment in animal tissue\"))) +\n  mytheme\n\n\n\n#setwd(\"D:/Quentin Schorpp/Schreibtisch/2 - Laborversuche/Mikrokosmen/Manuskript/Entwurf\")\n#ggsave(\"Figure1.pdf\", width=9, height=7, units=\"cm\", useDingbats=FALSE) \n#embed_fonts(\"Figure1.pdf\", outfile=\"Figure1.pdf\")\n#ggsave(\"Figure1.svg\", width=9, height=7, units=\"cm\") \n```\n\n\n# N2O and CO2 gas fluxes\nMeasurements from continous flow samples.\n***********************************************************************************************************************************\n#### N2O [ppb] data formatting\n```{r N2O Production rates}\nn2o.index <- n2o.ppb[,1:4]\nn2o.index$treat <- factor(n2o.index$treat, levels=c(\"Lt\", \"Fc\", \"int\", \"C\"))\nn2o.blanks <- n2o.ppb[57:59,5:19]\nn2o.ppb <- n2o.ppb[1:56,5:19]\n\n# mean for blanks\nn2o.blanks.mean=matrix(rep(0,15),1)\nfor (i in 1:15)\n  {a=mean(n2o.blanks[,i])\n\t n2o.blanks.mean[1,i]=a\n\t}\n\n# subtract blanks from MC measurements\nfor (i in 1:15)\n  {for (j in 1:56)\n   {n2o.ppb[j,i] = n2o.ppb[j,i]-n2o.blanks.mean[,i]\n  }\n\t} \n# eliminate negative values\nn2o.ppb[n2o.ppb<0] = 0\n\n\n# multiplication with gasflow\nn2o.prod=n2o.ppb*gasflow[,5:19]*10^-9*60 #[ml/h]  ### ppb beachten, zeitumrechnen\n### umrechnen von ml auf ?g\nn2o.prod=n2o.prod*44/22.4*1000 #[?g/h]\n### auf das Bodengewicht beziehen;  soil dry weight: 1080g\nn2o.bod=n2o.prod/1.080  #[?g/(kg h)\n### calculate N2O-N, Anteil an molarer Masse 28/44\nn2o=n2o.bod*28/44  #[?g/(kg h)]\n\nn2o.max <- melt(n2o, id.vars=1)\nwhich.max(n2o.max$value)\nn2o.max[which(n2o.max$value>15),]\n\nn2o.PR <- n2o\nn2o.PR$max.iniloam <- apply(n2o[,-c(1,6:16)],1,max)\nn2o.PR$max.ewloam <- apply(n2o[,-c(1:5)],1,max)\nn2o.PR$max.sand <- apply(n2o[,-1],1,max)\nn2o.PR  <- cbind(n2o.index[1:56,],n2o.PR[,17:19])\n\nwith(n2o.PR, tapply(max.sand, list(experiment, soil), mean))\nwith(n2o.PR, tapply(max.sand, list(experiment, soil), se))\n\n\n```\n\n#### Calculation of MEAN production rates N2O\n```{r N2O Means + SE}\nKopf=c(\"Tag 1\",\"Tag 3\",\"Tag 5\",\"Tag 7\",\"Tag 11\",\"Tag 15\",\"Tag 18\",\"Tag 21\",\"Tag 25\",\"Tag 28\",\"Tag 32\",\"Tag 35\",\"Tag 39\",\"Tag 42\",\"Tag 48\")\n\n#Treatment code\nn2o.index$code <- with(n2o.index, factor(interaction(treat,soil,experiment), levels= c(\"Lt.Loam.exp1\", \"int.Loam.exp1\", \"Fc.Loam.exp1\", \"C.Loam.exp1\",\"Lt.Sand.exp1\",\"int.Sand.exp1\",\"Fc.Sand.exp1\",\"C.Sand.exp1\", \"Lt.Loam.exp2\",\"int.Loam.exp2\",\"Fc.Loam.exp2\",\"C.Loam.exp2\",\"Lt.Sand.exp2\",\"int.Sand.exp2\",\"Fc.Sand.exp2\",\"C.Sand.exp2\")))\n\nn2o <- cbind(code=n2o.index[1:56,5], n2o)\n# MK8 und MK22 l?schen weil da Lt tot\nn2o.red=n2o[c(-8,-22),]\nn2o.red <- droplevels(n2o.red)\n\nstr(n2o.red)\n\n#### MW nach Treatment bilden ProdRate ####\nn2o.means=matrix(rep(0,240),16)\nfor (j in 2:16)\n{a=tapply(n2o.red[,j],n2o.red[,1],mean)\n n2o.means[,(j-1)]=a\n}\n\ncolnames(n2o.means)<-dimnames(n2o[,2:16])[[2]]\nn2o.means <- data.frame(n2o.means)\nn2o.means <- cbind(unique(n2o.index[1:56,-c(1,5)][c(-8,-22),]),n2o.means)\nhead(n2o.means)\n\n#### Standardfehler ProdRate ####\nn2o.se=matrix(rep(0,240),16)\nfor (j in 2:16)\n{b=tapply(n2o.red[,j],n2o.red[,1],se)\n n2o.se[,(j-1)]=b\n}\n\ncolnames(n2o.se)<-dimnames(n2o[,2:16])[[2]]\nn2o.se <- data.frame(n2o.se)\nn2o.se <- cbind(unique(n2o.index[1:56,-c(1,5)][c(-8,-22),]),n2o.se)\nhead(n2o.se)\n\n#### means with standard error N2O ####\nn2o.means2=round(n2o.means[,4:18],2)\nn2o.se2=round(n2o.se[,4:18],2)\n\nn2o.mean.se=matrix(rep(0,240),16)\nfor (i in 1:16)\n{for (j in 1:15)\n{a=paste(n2o.means2[i,j],\"?\",n2o.se2[i,j])\n n2o.mean.se[i,j]=a\n}\n}\ncolnames(n2o.mean.se)<-dimnames(n2o[,2:16])[[2]]\nn2o.mean.se <- data.frame(n2o.mean.se)\nn2o.mean.se <- cbind(unique(n2o.index[1:56,-c(1,5)][c(-8,-22),]),n2o.mean.se)\nhead(n2o.se)\n\n```\n\n#### Calculation of cumulative N2O\n```{r N2O Cumulative}\n#### kumuliertes N.N2O ####\ncode <- n2o.red[,1]\nn2o.red <- n2o.red[,-1]\n\ndays=c(1,3,5,7,11,15,18,21,25,28,32,35,39,42,48)\n\nn2o.rz=rbind(days,n2o.red)\n\n#N2O between two sampling dates\nn2o.btw=matrix(rep(0,756),54)\nfor (i in 2:55)\n{for (j in 1:14)\n{Zeit=(n2o.rz[1,(j+1)]-n2o.rz[1,j])*24  #*24da Zeit d in std umgerechnet werden muss\n a=Zeit*n2o.rz[i,j]+0.5*Zeit*(n2o.rz[i,(j+1)]-n2o.rz[i,j])\n n2o.btw[(i-1),j]=a\n}\n}\n\n# cumulative N2O for all samples\nn2o.cum=matrix(rep(0,756),54)\nfor (i in 1:54) {\n  for (j in 1:14) {\n    a=sum(n2o.btw[i,1:j])\n    n2o.cum[i,j]=a    \n  }  \n}\n\ncolnames(n2o.cum)<-days[-1]\ncbind(n2o.index[-c(8,22,57:59),],n2o.cum)\n\n\n# Means for treatments \nn2o.btw.mean=matrix(rep(0,224),16) #Matrix f?r MW der kum N2O Werte\nfor (j in 1:14)  #MW bilden\n{a=tapply(n2o.btw[,j],code,mean)\n n2o.btw.mean[,j]=a\n}\n# Standard error\nn2o.btw.se=matrix(rep(0,224),16) #Matrix f?r StdFehler der kum N2O Werte\nfor (j in 1:14)  #SE bilden\n{a=tapply(n2o.btw[,j],code,se)\n n2o.btw.se[,j]=a\n}\n\n# summed \nn2o.cum.mean=matrix(rep(0,224),16)   #Matrix f?r kum n20 ?ber die zeit\nfor (i in 1:16)\n{for (j in 1:14)\n{a=sum(n2o.btw.mean[i,1:j])\n n2o.cum.mean[i,j]=a\n}\n}\n\ncolnames(n2o.cum.mean) <- days[-1]\nn2o.cum.mean <- cbind(unique(n2o.index[1:56,-c(1,5)][c(-8,-22),]),n2o.cum.mean)\n\n##### Kum- n2o: Std.Fehler durch Fehlerfortpflanzung ####\nn2o.cum.se=matrix(rep(0,224),16)   #Matrix f?r stdfehler fortpflanzung kum n20 ?ber die zeit\nfor (i in 1:16)\n{for (j in 1:14)\n{a=sqrt(sum((n2o.btw.se[i,1:j])^2)) \n n2o.cum.se[i,j]=a\n}\n}\n\ncolnames(n2o.cum.se) <- days[-1]\nn2o.cum.se <- cbind(unique(n2o.index[1:56,-c(1,5)][c(-8,-22),]),n2o.cum.se)\n\n# for plots use n2o.cum.mean ans n2o.cum.se\n# for analysis use n2o.cum\n````\n  \n# Analysis\n```{r}\n# data = n2o.cum\n\nn2o.index$Lt <- revalue(n2o.index$treat, c(Lt=1, int=1, Fc=0, C=0))\nn2o.index$Fc <- revalue(n2o.index$treat, c(Lt=0, int=1, Fc=1, C=0))\n\nn2o.cum <- as.data.frame(cbind(n2o.index[c(1:56),][-c(8,22),], n2o.cum))\ncolnames(n2o.cum)[21] <- \"nc\"\ncolnames(n2o.cum)[4] <- \"exp\"\n\nn2o.cum <- droplevels(n2o.cum)\n\n### Experiment 1\n\n# multimodel averaging\nx <- c(\"Lt\",\"Fc\",\"exp\",\"soil\")\nnc.0 <- lm(nc~Lt*Fc*soil, n2o.cum[!(n2o.cum$exp==\"exp2\"),])\n#t(combn(x,3))\nnc.1 <- lm(nc~Lt*Fc, n2o.cum[!(n2o.cum$exp==\"exp2\"),])\nnc.2 <- lm(nc~Lt*soil, n2o.cum[!(n2o.cum$exp==\"exp2\"),])\nnc.3 <- lm(nc~Fc*soil, n2o.cum[!(n2o.cum$exp==\"exp2\"),])\n#t(combn(x,2))\nnc.4 <- lm(nc~Lt, n2o.cum[!(n2o.cum$exp==\"exp2\"),])\nnc.5 <- lm(nc~Fc, n2o.cum[!(n2o.cum$exp==\"exp2\"),])\nnc.6 <- lm(nc~soil, n2o.cum[!(n2o.cum$exp==\"exp2\"),])\n\nnc.7 <- lm(nc~1, n2o.cum[!(n2o.cum$exp==\"exp2\"),])\n\nAICctab(nc.0,  nc.1,  nc.2,  nc.3,  nc.4,  nc.5,  nc.6,  nc.7)\n\n#as.character(rep(\"nc\",c(1:15)))\n#x <- factor(paste(\"nc\",\".\",c(0:15),\",\",sep=\"\"), levels=)\n#print(x)\n#x <- factor(paste(\"nc\",\".\",c(0:15),\" <- \",sep=\"\"), levels=)\n#as.data.frame(x)\n\nsummary.aov(nc.2)\npar(mfrow=c(2,2))\nplot(nc.2)\npar(mfrow=c(1,1))\nboxcox(nc.2)\n#locator(1)\n\nnc.2 <- update(nc.2,I(1/nc^(1/5))~.)\nsummary.aov(nc.2)\npar(mfrow=c(2,2))\nplot(nc.2)\n\nnc.aov2 <- aov(nc~Lt*soil, n2o.cum[!(n2o.cum$exp==\"exp2\"),])\nnc.aov2 <- update(nc.aov2,I(1/nc^(1/5))~.)\nTukeyHSD(nc.aov2)\nnc.int <- with(n2o.cum[!(n2o.cum$exp==\"exp2\"),], interaction(soil,Lt)) # Double interaction factor\nnc.aov3 <- update(nc.aov2,.~nc.int)\nHSD.test(nc.aov3, \"nc.int\", group=TRUE, console=TRUE)\n\ntxt.nc = expression(paste(\"Nitrous Oxide \", N[2],\"O [?g \",N[2],\"O-N \",kg^-1,\"]\"))\nggplot(n2o.cum[!(n2o.cum$exp==\"exp2\"),], aes(x=Lt, y=nc), family=\"Arial\") + \n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"grey\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +  \n  facet_grid( .~ soil , scales=\"free\", space=\"free\",labeller=label_parsed) + \n  ylab(txt.nc) + \n  xlab(\"L. terrestris\") + \n  scale_x_discrete(labels=c(\"absent\", \"present\")) +\n  ggtitle(\"Experiment 1\") +\n  mytheme\n\n\nnc.int <- with(n2o.cum[!(n2o.cum$exp==\"exp2\"),], interaction(soil,Lt)) # Double interaction factor\nnc.aov3 <- update(nc.aov2,.~nc.int)\nHSD.test(nc.aov3, \"nc.int\", group=TRUE, console=TRUE)\n\nwith(n2o.cum[!(n2o.cum$exp==\"exp1\"),], list(round(tapply(nc, interaction(treat,soil), mean),0),\n                                            round(tapply(nc, interaction(treat,soil), se),0)))\n                                            \n                                            \nwith(n2o.cum[!(n2o.cum$exp==\"exp2\"),], list(round(tapply(nc, interaction(Lt,soil), mean),0),\n                   round(tapply(nc, interaction(Lt,soil), se),0)))\n\n\n### Experiment 1\n\n# multimodel averaging\nx <- c(\"Lt\",\"Fc\",\"exp\",\"soil\")\nnc.0 <- lm(nc~Lt*Fc*soil, n2o.cum[!(n2o.cum$exp==\"exp1\"),])\n#t(combn(x,3))\nnc.1 <- lm(nc~Lt*Fc, n2o.cum[!(n2o.cum$exp==\"exp1\"),])\nnc.2 <- lm(nc~Lt*soil, n2o.cum[!(n2o.cum$exp==\"exp1\"),])\nnc.3 <- lm(nc~Fc*soil, n2o.cum[!(n2o.cum$exp==\"exp1\"),])\n#t(combn(x,2))\nnc.4 <- lm(nc~Lt, n2o.cum[!(n2o.cum$exp==\"exp1\"),])\nnc.5 <- lm(nc~Fc, n2o.cum[!(n2o.cum$exp==\"exp1\"),])\nnc.6 <- lm(nc~soil, n2o.cum[!(n2o.cum$exp==\"exp1\"),])\n\nnc.7 <- lm(nc~1, n2o.cum[!(n2o.cum$exp==\"exp1\"),])\n\nAICctab(nc.0,  nc.1,  nc.2,  nc.3,  nc.4,  nc.5,  nc.6,  nc.7)\n\n#as.character(rep(\"nc\",c(1:15)))\n#x <- factor(paste(\"nc\",\".\",c(0:15),\",\",sep=\"\"), levels=)\n#print(x)\n#x <- factor(paste(\"nc\",\".\",c(0:15),\" <- \",sep=\"\"), levels=)\n#as.data.frame(x)\n\nsummary.aov(nc.2)\nsummary.aov(nc.0)\npar(mfrow=c(2,2))\nplot(nc.2)\npar(mfrow=c(1,1))\nboxcox(nc.2)\n# locator(1)\nfligner.test(nc~interaction(Lt,soil), n2o.cum[!(n2o.cum$exp==\"exp1\"),])\n\n\nnc.aov2 <- aov(nc~Lt*soil, n2o.cum[!(n2o.cum$exp==\"exp1\"),])\nTukeyHSD(nc.aov2)\nnc.int <- with(n2o.cum[!(n2o.cum$exp==\"exp1\"),], interaction(soil,Lt)) # Double interaction factor\nnc.aov3 <- update(nc.aov2,.~nc.int)\nHSD.test(nc.aov3, \"nc.int\", group=TRUE, console=TRUE)\n\ntxt.nc = expression(paste(\"Nitrous Oxide \", N[2],\"O [?g \",N[2],\"O-N \",kg^-1,\"]\"))\nggplot(n2o.cum[!(n2o.cum$exp==\"exp1\"),], aes(x=Lt, y=nc), family=\"Arial\") + \n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"grey\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +  \n  facet_grid( .~ soil , scales=\"free\", space=\"free\",labeller=label_parsed) + \n  ylab(txt.nc) + \n  xlab(\"L. terrestris\") + \n  scale_x_discrete(labels=c(\"absent\", \"present\")) +\n  ggtitle(\"Experiment 2\") +\n  mytheme\n\n\nnc.int <- with(n2o.cum[!(n2o.cum$exp==\"exp1\"),], interaction(soil,Lt,Fc)) # Double interaction factor\nnc.aov3 <- update(nc.aov2,.~nc.int)\nHSD.test(nc.aov3, \"nc.int\", group=TRUE, console=TRUE)\n\nwith(n2o.cum[!(n2o.cum$exp==\"exp1\"),], list(round(tapply(nc, interaction(Lt,soil), mean),0),\n                   round(tapply(nc, interaction(Lt,soil), se),0)))\n```\n\n\n### CO2 [ppm] data fromatting\n```{r CO2 Production rates}\nco2.index <- co2.ppm[,1:4]\nco2.index$treat <- factor(co2.index$treat, levels=c(\"Lt\", \"Fc\", \"int\", \"C\"))\nco2.blanks <- co2.ppm[57:59,5:19]\nco2.ppm <- co2.ppm[1:56,5:19]\n\n# mean for blanks\nco2.blanks.mean=matrix(rep(0,15),1)\nfor (i in 1:15)\n  {a=mean(co2.blanks[,i])\n   co2.blanks.mean[1,i]=a\n\t}\n\n# subtract blanks from MC measurements\nfor (i in 1:15)\n  {for (j in 1:56)\n   {co2.ppm[j,i] = co2.ppm[j,i]-co2.blanks.mean[,i]\n  }\n\t} \n\nco2.ppm[co2.ppm<0] = 0\n\n\n# multiplication with gasflow\n\nco2.prod=co2.ppm*gasflow[,5:19]*10^-6*60 #[ml/h]  ### ppm beachten, zeitumrechnen\n### umrechnen von ml auf ?g\nco2.prod=co2.prod*44/22.4*1000 #[?g/h]\n### auf das Bodengewicht beziehen;  soil dry weight: 1080g\nco2.bod=co2.prod/1.080  #[?g/(kg h)\n### calculate co2-N, Anteil an molarer Masse 28/44\nco2=co2.bod*12/44  #[?g/(kg h)]\n```\n\n\n#### Calculation of mean production rates co2\n```{r CO2 Mean + SE}\nKopf=c(\"Tag 1\",\"Tag 3\",\"Tag 5\",\"Tag 7\",\"Tag 11\",\"Tag 15\",\"Tag 18\",\"Tag 21\",\"Tag 25\",\"Tag 28\",\"Tag 32\",\"Tag 35\",\"Tag 39\",\"Tag 42\",\"Tag 48\")\n\n#Treatment code\nco2.index$code <- with(co2.index, factor(interaction(treat,soil,experiment), levels= c(\"Lt.Loam.exp1\", \"int.Loam.exp1\", \"Fc.Loam.exp1\", \"C.Loam.exp1\",\"Lt.Sand.exp1\",\"int.Sand.exp1\",\"Fc.Sand.exp1\",\"C.Sand.exp1\", \"Lt.Loam.exp2\",\"int.Loam.exp2\",\"Fc.Loam.exp2\",\"C.Loam.exp2\",\"Lt.Sand.exp2\",\"int.Sand.exp2\",\"Fc.Sand.exp2\",\"C.Sand.exp2\")))\n\nco2 <- cbind(code=co2.index[1:56,5], co2)\n# MK8 und MK22 l?schen weil da Lt tot\nco2.red=co2[c(-8,-22),]\nco2.red <- droplevels(co2.red)\n\nstr(co2.red)\n\n#### MW nach Treatment bilden ProdRate ####\nco2.means=matrix(rep(0,240),16)\nfor (j in 2:16)\n{a=tapply(co2.red[,j],co2.red[,1],mean)\n co2.means[,(j-1)]=a\n}\n\ncolnames(co2.means)<-dimnames(co2[,2:16])[[2]]\nco2.means <- data.frame(co2.means)\nco2.means <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.means)\nhead(co2.means)\n\n#### Standardfehler ProdRate ####\nco2.se=matrix(rep(0,240),16)\nfor (j in 2:16)\n{b=tapply(co2.red[,j],co2.red[,1],se)\n co2.se[,(j-1)]=b\n}\n\ncolnames(co2.se)<-dimnames(co2[,2:16])[[2]]\nco2.se <- data.frame(co2.se)\nco2.se <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.se)\nhead(co2.se)\n\n#### means with standard error co2 ####\nco2.means2=round(co2.means[,4:18],2)\nco2.se2=round(co2.se[,4:18],2)\n\nco2.mean.se=matrix(rep(0,240),16)\nfor (i in 1:16)\n{for (j in 1:15)\n{a=paste(co2.means2[i,j],\"?\",co2.se2[i,j])\n co2.mean.se[i,j]=a\n}\n}\ncolnames(co2.mean.se)<-dimnames(co2[,2:16])[[2]]\nco2.mean.se <- data.frame(co2.mean.se)\nco2.mean.se <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.mean.se)\nhead(co2.se)\n\n```\n\n#### Calculation of cumulative CO2\n```{r CO2 cumulative}\n#### kumuliertes N.co2 ####\ncode <- co2.red[,1]\nco2.red <- co2.red[,-1]\n\ndays=c(1,3,5,7,11,15,18,21,25,28,32,35,39,42,48)\n\nco2.rz=rbind(days,co2.red)\n\n#co2 between two sampling dates\nco2.btw=matrix(rep(0,756),54)\nfor (i in 2:55)\n{for (j in 1:14)\n{Zeit=(co2.rz[1,(j+1)]-co2.rz[1,j])*24  #*24da Zeit d in std umgerechnet werden muss\n a=Zeit*co2.rz[i,j]+0.5*Zeit*(co2.rz[i,(j+1)]-co2.rz[i,j])\n co2.btw[(i-1),j]=a\n}\n}\n\n# cumulative co2 for all samples\nco2.cum=matrix(rep(0,756),54)\nfor (i in 1:54) {\n  for (j in 1:14) {\n    a=sum(co2.btw[i,1:j])\n    co2.cum[i,j]=a    \n  }  \n}\n\ncolnames(co2.cum)<-days[-1]\ncbind(co2.index[-c(8,22,57:59),],co2.cum)\n\n\n# Means for treatments \nco2.btw.mean=matrix(rep(0,224),16) #Matrix f?r MW der kum co2 Werte\nfor (j in 1:14)  #MW bilden\n{a=tapply(co2.btw[,j],code,mean)\n co2.btw.mean[,j]=a\n}\n# Standard error\nco2.btw.se=matrix(rep(0,224),16) #Matrix f?r StdFehler der kum co2 Werte\nfor (j in 1:14)  #SE bilden\n{a=tapply(co2.btw[,j],code,se)\n co2.btw.se[,j]=a\n}\n\n# summed \nco2.cum.mean=matrix(rep(0,224),16)   #Matrix f?r kum n20 ?ber die zeit\nfor (i in 1:16)\n{for (j in 1:14)\n{a=sum(co2.btw.mean[i,1:j])\n co2.cum.mean[i,j]=a\n}\n}\n\ncolnames(co2.cum.mean) <- days[-1]\nco2.cum.mean <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.cum.mean)\n\n##### Kum- co2: Std.Fehler durch Fehlerfortpflanzung ####\nco2.cum.se=matrix(rep(0,224),16)   #Matrix f?r stdfehler fortpflanzung kum n20 ?ber die zeit\nfor (i in 1:16)\n{for (j in 1:14)\n{a=sqrt(sum((co2.btw.se[i,1:j])^2)) \n co2.cum.se[i,j]=a\n}\n}\n\ncolnames(co2.cum.se) <- days[-1]\nco2.cum.se <- cbind(unique(co2.index[1:56,-c(1,5)][c(-8,-22),]),co2.cum.se)\n\n# for plots use co2.cum.mean ans co2.cum.se\n# for analysis use co2.cum\n````\nAnalysis\n```{r}\n# data = co2.cum\n\nco2.index$Lt <- revalue(co2.index$treat, c(Lt=1, int=1, Fc=0, C=0))\nco2.index$Fc <- revalue(co2.index$treat, c(Lt=0, int=1, Fc=1, C=0))\n\nco2.cum <- as.data.frame(cbind(co2.index[c(1:56),][-c(8,22),], co2.cum))\ncolnames(co2.cum)[21] <- \"cc\"\ncolnames(co2.cum)[4] <- \"exp\"\n\nco2.cum <- droplevels(co2.cum)\nco2.cum.org <- co2.cum\n#co2.cum <- co2.cum.org\n\nco2.cum <- co2.cum[-1,]\nco2.cum <- co2.cum[-1,]\n\n\n### Experiment 1\n\n# multimodel averaging\nx <- c(\"Lt\",\"Fc\",\"exp\",\"soil\")\ncc.0 <- lm(cc~Lt*Fc*soil, co2.cum[!(co2.cum$exp==\"exp2\"),])\n#t(combn(x,3))\ncc.1 <- lm(cc~Lt*Fc, co2.cum[!(co2.cum$exp==\"exp2\"),])\ncc.2 <- lm(cc~Lt*soil, co2.cum[!(co2.cum$exp==\"exp2\"),])\ncc.3 <- lm(cc~Fc*soil, co2.cum[!(co2.cum$exp==\"exp2\"),])\n#t(combn(x,2))\ncc.4 <- lm(cc~Lt, co2.cum[!(co2.cum$exp==\"exp2\"),])\ncc.5 <- lm(cc~Fc, co2.cum[!(co2.cum$exp==\"exp2\"),])\ncc.6 <- lm(cc~soil, co2.cum[!(co2.cum$exp==\"exp2\"),])\n\ncc.7 <- lm(cc~1, co2.cum[!(co2.cum$exp==\"exp2\"),])\n\nAICctab(cc.0,  cc.1,  cc.2,  cc.3,  cc.4,  cc.5,  cc.6,  cc.7)\n\n#as.character(rep(\"cc\",c(1:15)))\n#x <- factor(paste(\"cc\",\".\",c(0:15),\",\",sep=\"\"), levels=)\n#print(x)\n#x <- factor(paste(\"cc\",\".\",c(0:15),\" <- \",sep=\"\"), levels=)\n#as.data.frame(x)\n\nsummary.aov(cc.2)\nsummary.aov(cc.0)\npar(mfrow=c(2,2))\nplot(cc.0)\npar(mfrow=c(1,1))\nboxcox(cc.0, lambda=c(-50,50,5))\nlocator(1)\n\ncc.0 <- update(cc.0,I(cc*10^-3)~.)\nsummary.aov(cc.0)\npar(mfrow=c(2,2))\nplot(cc.0)\n\ncc.aov2 <- aov(cc~Lt*soil*Fc, co2.cum[!(co2.cum$exp==\"exp2\"),])\ncc.aov2 <- update(cc.aov2,I(cc*10^-3)~.)\nTukeyHSD(cc.aov2)\ncc.int <- with(co2.cum[!(co2.cum$exp==\"exp2\"),], interaction(soil,treat)) # Double interaction factor\ncc.aov3 <- update(cc.aov2,.~cc.int)\nHSD.test(cc.aov3, \"cc.int\", group=TRUE, console=TRUE)\n\ntxt.cc = expression(paste(\"Carbon Dioxide\", CO[2],\" [mg \",CO[2],\"-C \",kg^-1,\"]\"))\nggplot(co2.cum[!(co2.cum$exp==\"exp2\"),], aes(x=treat, y=cc), family=\"Arial\") + \n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"grey\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +  \n  facet_grid( .~ soil , scales=\"free\", space=\"free\",labeller=label_parsed) + \n  ylab(txt.cc) + \n  xlab(\"L. terrestris\") + \n  #scale_x_discrete(labels=c(\"absent\", \"present\")) +\n  ggtitle(\"Experiment 1\") +\n  mytheme\n\n\ncc.int <- with(co2.cum[!(co2.cum$exp==\"exp2\"),], interaction(soil,Lt)) # Double interaction factor\ncc.aov3 <- update(cc.aov2,.~cc.int)\nHSD.test(cc.aov3, \"cc.int\", group=TRUE, console=TRUE)\n\nwith(co2.cum[!(co2.cum$exp==\"exp2\"),], list(round(tapply(cc, interaction(treat,soil), mean),0),\n                                            round(tapply(cc, interaction(treat,soil), se),0)))\n                                            \n                                            \nwith(co2.cum[!(co2.cum$exp==\"exp2\"),], list(round(tapply(cc, interaction(Lt,soil), mean),0),\n                   round(tapply(cc, interaction(Lt,soil), se),0)))\n\n\n### Experiment 1\n\n# multimodel averaging\nx <- c(\"Lt\",\"Fc\",\"exp\",\"soil\")\ncc.0 <- lm(cc~Lt*Fc*soil, co2.cum[!(co2.cum$exp==\"exp1\"),])\n#t(combn(x,3))\ncc.1 <- lm(cc~Lt*Fc, co2.cum[!(co2.cum$exp==\"exp1\"),])\ncc.2 <- lm(cc~Lt*soil, co2.cum[!(co2.cum$exp==\"exp1\"),])\ncc.3 <- lm(cc~Fc*soil, co2.cum[!(co2.cum$exp==\"exp1\"),])\n#t(combn(x,2))\ncc.4 <- lm(cc~Lt, co2.cum[!(co2.cum$exp==\"exp1\"),])\ncc.5 <- lm(cc~Fc, co2.cum[!(co2.cum$exp==\"exp1\"),])\ncc.6 <- lm(cc~soil, co2.cum[!(co2.cum$exp==\"exp1\"),])\n\ncc.7 <- lm(cc~1, co2.cum[!(co2.cum$exp==\"exp1\"),])\n\nAICctab(cc.0,  cc.1,  cc.2,  cc.3,  cc.4,  cc.5,  cc.6,  cc.7)\n\n#as.character(rep(\"cc\",c(1:15)))\n#x <- factor(paste(\"cc\",\".\",c(0:15),\",\",sep=\"\"), levels=)\n#print(x)\n#x <- factor(paste(\"cc\",\".\",c(0:15),\" <- \",sep=\"\"), levels=)\n#as.data.frame(x)\n\nsummary.aov(cc.2)\npar(mfrow=c(2,2))\nplot(cc.2)\npar(mfrow=c(1,1))\nboxcox(cc.2)\n# locator(1)\nfligner.test(cc~interaction(Lt,soil), co2.cum[!(co2.cum$exp==\"exp1\"),])\n\n\ncc.aov2 <- aov(cc~Lt*soil, co2.cum[!(co2.cum$exp==\"exp1\"),])\nTukeyHSD(cc.aov2)\ncc.int <- with(co2.cum[!(co2.cum$exp==\"exp1\"),], interaction(soil,Lt)) # Double interaction factor\ncc.aov3 <- update(cc.aov2,.~cc.int)\nHSD.test(cc.aov3, \"cc.int\", group=TRUE, console=TRUE)\n\ntxt.cc = expression(paste(\"Carbon Dioxide\", CO[2],\" [mg \",CO[2],\"-C \",kg^-1,\"]\"))\nggplot(co2.cum[!(co2.cum$exp==\"exp1\"),], aes(x=Lt, y=cc), family=\"Arial\") + \n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"grey\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +  \n  facet_grid( .~ soil , scales=\"free\", space=\"free\",labeller=label_parsed) + \n  ylab(txt.cc) + \n  xlab(\"L. terrestris\") + \n  scale_x_discrete(labels=c(\"absent\", \"present\")) +\n  ggtitle(\"Experiment 2\") +\n  mytheme\n\n\ncc.int <- with(co2.cum[!(co2.cum$exp==\"exp1\"),], interaction(soil,Lt,Fc)) # Double interaction factor\ncc.aov3 <- update(cc.aov2,.~cc.int)\nHSD.test(cc.aov3, \"cc.int\", group=TRUE, console=TRUE)\n\nwith(co2.cum[!(co2.cum$exp==\"exp1\"),], list(round(tapply(cc, interaction(Lt,soil), mean),0),\n                   round(tapply(cc, interaction(Lt,soil), se),0)))\n```\n\n#### Multipanel plots for Gas fluxes of N2O and CO2\n```{r Gas flux Multipanel plot}\n\nmeasure=rep(c(\"mean\",\"se\"),each=16)\n\nA=cbind(melt(cbind(measure=measure,rbind(n2o.cum.mean,n2o.cum.se)), id.vars= c(1:4))[,1:5],\n      n2o.cum=melt(cbind(measure=measure,rbind(n2o.cum.mean,n2o.cum.se)), id.vars= c(1:4))$value,\n      co2.cum=melt(cbind(measure=measure,rbind(co2.cum.mean,co2.cum.se)), id.vars= c(1:4))$value)\nB=cbind(melt(cbind(measure=measure,rbind(n2o.means,n2o.se)),         id.vars= c(1:4))[,1:5],\n      n2o=melt(cbind(measure=measure,rbind(n2o.means,n2o.se)),     id.vars= c(1:4))$value,\n      co2=melt(cbind(measure=measure,rbind(co2.means,co2.se)),    id.vars= c(1:4))$value)\n\nC=A[1:32,]\nC[,6:7]=NA\nC[,5]=1\nA=rbind(C,A)\nfig2.extended=cbind(A,B[6:7])\ncolnames(fig2.extended)[[5]] <- \"day\"\nfig2.extended$day <- as.integer(fig2.extended$day)\nfig2.x  <- melt(fig2.extended, id.vars= c(1:5)) \nfig2.x  <- dcast(fig2.x, treat+soil+variable+day+experiment~measure) \nfig2.x  <- fig2.x[order(fig2.x$experiment ),]\nfig2.x$variable <- revalue(fig2.x$variable, c(n2o=\"paste(N[2],O)~Production~Rate\",co2= \"paste(CO[2])~Production~Rate\", n2o.cum=\"Cumulative~paste(N[2],O)\", co2.cum=\"Cumulative~CO[2]\"))\nfig2.x$variable <- factor(fig2.x$variable, levels=c(\"paste(N[2],O)~Production~Rate\",\"Cumulative~paste(N[2],O)\", \"paste(CO[2])~Production~Rate\",\"Cumulative~CO[2]\"))\n\ntxt.ylab = expression(paste(CO[2],\"[?g \",CO[2],\"-C \",kg^-1,\"]\",\n                                 \"       \", \n                                 CO[2],\"[?g \",CO[2],\"-C \",kg^-1, h^-1,\"]\",\n                                 \"      \",\n                                 N[2],\"O [?g \",N[2],\"O-N \",kg^-1,\"]\",\n                                 \"       \", \n                                 N[2],\"O [?g \",N[2],\"O-N \",kg^-1, h^-1,\"]\"))\n\npd = position_dodge(0.2)\nggplot(data=fig2.x, aes(x=day, y=mean, group=treat, shape=treat)) + \n  geom_point(size=1.5, position=pd, fill=\"white\") + \n  geom_line (size=0.35, position=pd) + \n  geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=4, size=0.2, position=pd) + \n  xlab(\"Days [d]\") +\n  ylab(txt.ylab) +\n  facet_grid(variable~experiment+soil, scales =\"free\", labeller=label_parsed) + \n  scale_shape_manual(values=c(17,15,16,21), \n                     labels=c(\"L. terrestris\",\"Interaction\",\"F. candida\", \"Control\")) + \n                     #limits=c(\"L. terrestris\",\"F. candida\",\"Interaction\",\"Control\")) +\n  labs(shape=\"Treatment:\") +\n  mytheme + theme(legend.position=\"bottom\")\n````\n\n\n#### Figure1 Multipanel plot with distinct variables\n```{r Figure 1}\nfig2  <- melt(fig2, id.vars= c(1:5)) \nfig2  <- dcast(fig2, treat+soil+variable+day+Experiment~measure) \nfig2$variable <- revalue(fig2$variable, c(nitox=\"paste(N[2],O)~Production~Rate\", nitox_cum=\"Cumulative~paste(N[2],O)\", carbon=\"Cumulative~CO[2]\"))\nfig2$variable <- factor(fig2$variable, levels=c(\"paste(N[2],O)~Production~Rate\",\"Cumulative~paste(N[2],O)\", \"Cumulative~CO[2]\"))\n\ntxt.cum_nitox = expression(paste(CO[2],\"[?g \",CO[2],\"-C \",kg^-1,\"]\",\n                                 \"                       \",\n                                 N[2],\"O [?g \",N[2],\"O-N \",kg^-1,\"]\",\n                                 \"                       \",\n                                 N[2],\"O [?g \",N[2],\"O-N \",kg^-1, h^-1,\"]\"))\n\npd = position_dodge(0.2)\nggplot(data=fig2, aes(x=day, y=mean, group=treat, shape=treat)) + \n  geom_point(size=2.0, position=pd, fill=\"white\") + \n  geom_line (size=0.35, position=pd) + \n  geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=4, size=0.2, position=pd) + \n  xlab(\"Days [d]\") +\n  ylab(txt.cum_nitox) +\n  facet_grid(variable~soil, scales =\"free\", labeller=label_parsed) + \n  scale_shape_manual(values=c(21,16,15,17), \n                     labels=c(\"Control\",\"F. candida\",\"Interaction\", \"L. terrestris\")) + \n  #                   limits=c(\"L. terrestris\",\"F. candida\",\"Interaction\",\"Control\")) +\n  labs(shape=\" \") +\n  mytheme +\n  theme(legend.position=c(0.57,0.9) )#+\n       #legend.position=\"bottom\"))\n\n## ggsave(\"Figure 1.pdf\", width=19, height=15, units=\"cm\", useDingbats=FALSE)\n```\n Appendix A\n```{r Appendix A}\nmeasure=rep(c(\"mean\",\"se\"),each=16)\n\nA=cbind(melt(cbind(measure=measure,rbind(n2o.cum.mean,n2o.cum.se)), id.vars= c(1:4))[,1:5],\n      n2o.cum=melt(cbind(measure=measure,rbind(n2o.cum.mean,n2o.cum.se)), id.vars= c(1:4))$value,\n      co2.cum=melt(cbind(measure=measure,rbind(co2.cum.mean,co2.cum.se)), id.vars= c(1:4))$value)\nB=cbind(melt(cbind(measure=measure,rbind(n2o.means,n2o.se)),         id.vars= c(1:4))[,1:5],\n      n2o=melt(cbind(measure=measure,rbind(n2o.means,n2o.se)),     id.vars= c(1:4))$value,\n      co2=melt(cbind(measure=measure,rbind(co2.means,co2.se)),    id.vars= c(1:4))$value)\n\nC=A[1:32,]\nC[,6:7]=NA\nC[,5]=1\nA=rbind(C,A)\nfig2.extended=cbind(A,B[6:7])\ncolnames(fig2.extended)[[5]] <- \"day\"\nfig2.extended$day <- as.integer(fig2.extended$day)\nfig2.x  <- melt(fig2.extended, id.vars= c(1:5)) \nfig2.x  <- dcast(fig2.x, treat+soil+variable+day+experiment~measure) \nfig2.x  <- fig2.x[order(fig2.x$experiment ),]\nfig2.x$variable <- revalue(fig2.x$variable, c(n2o=\"paste(N[2],O)~Production~Rate\",co2= \"paste(CO[2])~Production~Rate\", n2o.cum=\"Cumulative~paste(N[2],O)\", co2.cum=\"Cumulative~CO[2]\"))\nfig2.x$variable <- factor(fig2.x$variable, levels=c(\"paste(N[2],O)~Production~Rate\",\"Cumulative~paste(N[2],O)\", \"paste(CO[2])~Production~Rate\",\"Cumulative~CO[2]\"))\n\ntxt.ylab = expression(paste(CO[2],\"[?g \",CO[2],\"-C \",kg^-1,\"]\",\n                                 \"                      \",\n                                 #CO[2],\"[?g \",CO[2],\"-C \",kg^-1, h^-1,\"]\",\n                                 #\"                   \",\n                                 N[2],\"O [?g \",N[2],\"O-N \",kg^-1,\"]\",\n                                 \"                      \",\n                                 N[2],\"O [?g \",N[2],\"O-N \",kg^-1, h^-1,\"]\"))\n\npd = position_dodge(0.2)\nggplot(data=fig2.x[(fig2.x$experiment==\"exp2\" & !fig2.x$variable==\"paste(CO[2])~Production~Rate\"),], aes(x=day, y=mean, group=treat, shape=treat)) + \n  geom_point(size=2.0, position=pd, fill=\"white\") + \n  geom_line (size=0.35, position=pd) + \n  geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=4, size=0.2, position=pd) + \n  xlab(\"Days [d]\") +\n  ylab(txt.ylab) +\n  facet_grid(variable~soil, scales =\"free\", labeller=label_parsed) + \n  scale_shape_manual(values=c(17,16,15,21), \n                     labels=c(\"L. terrestris\",\"F. candida\", \"Interaction\",\"Control\")) + \n                     #limits=c(\"L. terrestris\",\"F. candida\",\"Interaction\",\"Control\")) +\n  labs(shape=\" \") +\n  mytheme + theme(legend.position=c(0.57,0.9))\n\n## ggsave(\"Appendix A.pdf\", width=19, height=15, units=\"cm\", useDingbats=FALSE)\n```\n\n  \n  \n# Stable Isotopes 15N Gas \n_______________________________________________________________________________________________________________\n#### Data formatting\n```{r 15N-Gas data formatting, echo=FALSE}\nstr(gas15)\ngas15$date  <- as.POSIXlt(gas15$date)\ngas15$treat <- factor(gas15$treat, levels = c(\"Lt\", \"Fc\", \"LF\", \"C\"))\nstr(gas15)\n\n# subsets\nident = gas15[,1:3]\ntreatments = gas15[,8:13]\ntime = gas15[,4:7]\ngas = gas15[,19:24]\n\n    # data frame with the 4 relevant variables nitox.pool, dinirogen, nitox, total\n    gas15.data = cbind(MK=gas15$MK, day=gas15$day, soil=gas15$soil, gas15[,c(9,10)], gas15[,20:24])\n\n#________________________________________________________________________________________________\n# color palette for treatment Graphics\ntrt_pal = c(\"firebrick3\", \"dodgerblue2\", \"darkorchid\", \"dimgray\")\n\n# y-Axis labels\ntxt.total      = expression(paste(\"Total \", N[2],\"O+\",N[2],\" [?g \",N[2],\"(O)-N \",kg^-1, h^-1,\"]\"))\ntxt.dinitrogen = expression(paste(\"Dinitrogen \", N[2],\" [?g \",N[2],\"-N \",kg^-1, h^-1,\"]\"))\ntxt.ratio      = expression(paste(\"Product Ratio \", N[2],\"O/\",N[2],\"+\",N[2],\"O\"))\ntxt.pool       = expression(paste(\"Plant derived \", N[2],\"O\",\"[%]\"))\ntxt.nitox      = expression(paste(\"Nitrous Oxide \", N[2],\"O [?g \",N[2],\"O-N \",kg^-1, h^-1,\"]\"))\n````\n  \n  \n### Data Exploration + Graphics\n#### dinitrogen, product ratio, nitrous oxide\n```{r Figure 3, echo=FALSE}\n##### Multi-Panel Lineplot with mean and standard error #####\n\n#**** create dataset with mean +standard error ****\n  \n  head1 = c(\"treat\",\"day\",\"soil\", \"total\",\"product.ratio\",\"nitox\",\"dinitrogen\",\"nitox.pool\")\n  \n  # df for mean over time(day)\n  gas15.mean     = matrix(0,32,8)\n  gas15.mean[,1] =rep(c(\"Lt\", \"Fc\", \"LF\", \"C\"),c(4,4,4,4))\n  gas15.mean[,2] =rep(c(19, 26, 33, 40),4)\n  gas15.mean[,3] =rep(c(\"Loam\", \"Sand\"),c(16,16))\n  gas15.mean[,4] = with(gas15, tapply(total, list(day,treat,soil), mean))\n  gas15.mean[,5] = with(gas15, tapply(product.ratio, list(day,treat,soil), mean))\n  gas15.mean[,6] = with(gas15, tapply(nitox, list(day,treat,soil), mean))\n  gas15.mean[,7] = with(gas15, tapply(dinitrogen, list(day,treat,soil), mean))\n  gas15.mean[,8] = with(gas15, tapply(nitox.pool, list(day,treat,soil), mean))\n  colnames(gas15.mean) = head1\n  gas15.mean <- as.data.frame(gas15.mean)\n  str(gas15.mean)\n\n  # df for standard error over time(day)\n  gas15.se     = matrix(0,32,8)\n  gas15.se[,1] =rep(c(\"Lt\", \"Fc\", \"LF\", \"C\"),c(4,4,4,4))\n  gas15.se[,2] =rep(c(19, 26, 33, 40),4)\n  gas15.se[,3] =rep(c(\"Loam\", \"Sand\"),c(16,16))\n  gas15.se[,4] = with(gas15, tapply(total, list(day,treat,soil),se))\n  gas15.se[,5] = with(gas15, tapply(product.ratio, list(day,treat,soil),se))\n  gas15.se[,6] = with(gas15, tapply(nitox, list(day,treat,soil),se))\n  gas15.se[,7] = with(gas15, tapply(dinitrogen, list(day,treat,soil),se))\n  gas15.se[,8] = with(gas15, tapply(nitox.pool, list(day,treat,soil),se))\n  colnames(gas15.se) = head1\n  gas15.se <- as.data.frame(gas15.se)\n  \n#**** prepare dataframe for multi panel plot ****\n\n  gas15.mean.melt           <- melt(gas15.mean, id.vars= c(1:3), measure.vars=c(4:8)) \n  gas15.se.melt             <- melt(gas15.se, id.vars = c(1:3)) \n\n  ## combine mean and standard error in one dataframe\n  gas15.fig3           <- cbind(gas15.mean.melt[1:96,], gas15.se.melt[1:96,5])\n  colnames(gas15.fig3)[6] <- \"se\"\n\n  # Reorder Factor levels\n  gas15.fig3$variable  <- factor(gas15.fig3$variable, levels = c(\"total\", \"product.ratio\", \"nitox\", \"dinitrogen\", \"nitox.pool\"))\n  gas15.fig3$treat     <- factor(gas15.fig3$treat, levels = c(\"Lt\", \"Fc\", \"LF\", \"C\"))\n  # For facet.grid:\n  levels(gas15.fig3$variable)[levels(gas15.fig3$variable)==\"total\"] <- \"paste(N[2],O)+N[2]\"\n  levels(gas15.fig3$variable)[levels(gas15.fig3$variable)==\"product.ratio\"] <- \"Product~Ratio\"\n  levels(gas15.fig3$variable)[levels(gas15.fig3$variable)==\"nitox\"] <- \"paste(N[2],O)\"\n\n  # Coerce objects in required structure, \n  # keep an eye on as.numeric(as.character()), for coercion from factor to numeric!!!\n  gas15.fig3$value     <- as.numeric(gas15.fig3$value)\n  gas15.fig3$se        <- as.numeric(as.character(gas15.fig3$se))\n  str(gas15.fig3)\n\n#**** Multi Panel Plot ****\n\n# Labels\n    txt.total = expression(paste(?g~Total-N~h^-1,kg^-1))\n    txt.ratio = expression(paste(N[2],O)/paste(N[2],O+N[2]))\n    txt.nitox = expression(paste(?g~paste(N[2],O)-N~h^-1,kg^-1))\n    txt.full  = expression(paste(paste(?g~paste(N[2],O)-N~kg^-1,h^-1),\"       \",frac(paste(N[2],O),paste(N[2],O+N[2])),\"        \",paste(?g~Total-N~kg^-1,h^-1)))\n\n\npd=position_dodge(0.2)\nggplot(data=gas15.fig3, aes(x=day, y=value, group=treat, shape=treat)) +\n  facet_grid(variable~soil, scales=\"free\", labeller=label_parsed) +\n  #guides(colour=F, shape=F) +\n  geom_errorbar(aes(ymin=value-se, ymax=value+se), size=0.25, width=.3, position=pd) + \n  geom_line(size=0.3, position=pd) +\n  geom_point(size=2.0, position=pd, colour=\"black\", fill=\"white\") +\n  scale_shape_manual(values=c(17,16,15,21), labels=c(\"L. terrestris\", \"F. candida\",\"Interaction\",\"Control\")) +\n  #scale_colour_manual(values=trt_pal) +\n  #scale_colour_grey(start=0, end=0.6) +\n  labs(shape=\"\") +\n  xlab(\"Days [d]\") +\n  ylab(txt.full) +\n  mytheme + theme(legend.position=\"bottom\")                     \n\n## ggsave(\"Figure 2.pdf\",  width=9, height=10.5, unit=\"cm\", useDingbats=FALSE)   \n````\n\n#### litter-derived nitrous oxide \n```{r Figure 4}\n\n#### create dataframe \n# Mean values over MK\n  gas15.fig4 <- matrix(0,26,9)\n  gas15.fig4 <- as.data.frame(gas15.fig4)\n  gas15.fig4[,1] = gas15[1:26,1]\n  gas15.fig4[,2] = factor(rep(c(\"Lt\", \"LF\", \"Fc\", \"C\"), c(4,3,3,3)),levels = c(\"Lt\", \"Fc\", \"LF\", \"C\"))\n  gas15.fig4[,3] = factor(rep(c(\"Loam\", \"Sand\"), c(13,13)))\n  gas15.fig4[,4] = with(gas15, round(tapply(nitox, MK, mean),3))\n  gas15.fig4[,5] = with(gas15, round(tapply(nitox.pool, MK, mean),3))\n  gas15.fig4[,6] = with(gas15, round(tapply(nitox.gc, MK, mean),3))\n  gas15.fig4[,7] = with(gas15, round(tapply(nitox, MK,se),3))\n  gas15.fig4[,8] = with(gas15, round(tapply(nitox.pool, MK,se),3))\n  gas15.fig4[,9] = with(gas15, round(tapply(nitox.gc, MK,se),3))\n  colnames(gas15.fig4) = head2 = c(\"MK\",\"treat\",\"soil\",\"nitox.mean\",\"nitox.pool.mean\",\"nitox.gc.mean\",\"nitox.se\",\"nitox.pool.se\", \"nitox.gc.se\")\n\n  # gas15.fig4$treat <- factor(gas15.fig4$treat, levels = c(\"Lt\", \"Fc\", \"LF\", \"C\"))\n  gas15.fig4$Lter <- factor(rep(rep(c(\"+Lt\", \"-Lt\"), c(7,6)),2))\n  gas15.fig4$col.fac <- interaction(gas15.fig4$soil, gas15.fig4$Lter, sep=\"\")\n  str(gas15.fig4)\n  gas15.fig4 <- droplevels(gas15.fig4)   \n#### create Single Panel Plot with ellipse #\n\n# Color palettes\nLtSoil_pal=c(\"gray8\", \"gray30\", \"gray48\", \"gray70\")\nLtSoil_pal2=c(\"darkseagreen\", \"burlywood\", \"darkolivegreen3\", \"darkgoldenrod1\")\ntitle = expression(paste(\"Plant derived \",N[2],\"O depending on soiltype and presence of L. terrestris\"))\n\n# Ellipse Building\n# Script from http://stackoverflow.com/questions/13794419/plotting-ordiellipse-function-from-vegan-package-onto-nmds-plot-created-in-ggplo\n\n# For annotation\nellipse.mean=with(gas15.fig4, aggregate(gas15.fig4[,c(4,5)],list(group=col.fac),mean))\n\n# Special function \nveganCovEllipse <- function (cov, center = c(0, 0), scale = 1, npoints = 100) \n{\n  theta <- (0:npoints) * 2 * pi/npoints\n  Circle <- cbind(cos(theta), sin(theta))\n  t(center + scale * t(Circle %*% chol(cov)))\n}\n\n# Data frame df_ell contains values to show ellipses. \n# It is calculated with function veganCovEllipse which is hidden in vegan package. \n# This function is applied to each level of NMDS (group) and \n# it uses also function cov.wt to calculate covariance matrix.\n\ndf_ell <- data.frame()\nfor(g in levels(gas15.fig4$col.fac)){\n  df_ell <- rbind(df_ell, cbind(as.data.frame(with(gas15.fig4[gas15.fig4$col.fac==g,],\n                                                   veganCovEllipse(cov.wt(cbind(nitox.mean,nitox.pool.mean),wt=rep(1/length(nitox.mean),length(nitox.mean)))$cov,center=c(mean(nitox.mean),mean(nitox.pool.mean)))))\n                                ,group=g))\n}\n#________________________________________________________________________________________________________\n# plot #\n#Labels\ntxt.pool = expression(paste(\"Plant derived \", N[2],\"O\",\" [%]\"))\ntxt.nitox = expression(paste(N[2],\"O\"[litter],\" [?g \",N[2],\"O-N \",kg^-1, h^-1,\"]\"))\n\np4 = ggplot(data=gas15.fig4, aes(x=nitox.mean, y=nitox.pool.mean)) +\n  #guides(colour=F, shape=F) +\n  geom_point(aes(colour=col.fac, shape=treat), size=2.0) +\n  geom_path(data=df_ell, aes(x=nitox.mean, y=nitox.pool.mean, colour=group), size=0.5, linetype=2) +\n  annotate(\"text\",x=ellipse.mean$nitox.mean+0.1,y=ellipse.mean$nitox.pool.mean,label=ellipse.mean$group, size=2.5) +\n  scale_shape_manual(values=c(17,16,15,21)) +\n  scale_colour_manual(values=LtSoil_pal) +\n  scale_y_continuous(limits=c(0,1)) +\n  ylab(txt.pool) +\n  xlab(txt.nitox)\np4 + mytheme +theme(legend.position=\"none\" )\n        \n# ggsave(\"Figure 4.pdf\", width=9, height=7, units=\"cm\", useDingbats=FALSE)\n# ggsave(\"Figure 4.svg\", width=9, height=7, units=\"cm\")\n```\n\nFor nitox.gc\n```{r}\n#### create dataframe \n# Mean values over MK\ngas15.fig4 <- matrix(0,26,9)\ngas15.fig4 <- as.data.frame(gas15.fig4)\ngas15.fig4[,1] = gas15[1:26,1]\ngas15.fig4[,2] = factor(rep(c(\"Lt\", \"LF\", \"Fc\", \"C\"), c(4,3,3,3)),levels = c(\"Lt\", \"Fc\", \"LF\", \"C\"))\ngas15.fig4[,3] = factor(rep(c(\"Loam\", \"Sand\"), c(13,13)))\ngas15.fig4[,4] = with(gas15, round(tapply(nitox, MK, mean),3))\ngas15.fig4[,5] = with(gas15, round(tapply(nitox.pool, MK, mean),3))\ngas15.fig4[,6] = with(gas15, round(tapply(nitox.gc, MK, mean),3))\ngas15.fig4[,7] = with(gas15, round(tapply(nitox, MK,se),3))\ngas15.fig4[,8] = with(gas15, round(tapply(nitox.pool, MK,se),3))\ngas15.fig4[,9] = with(gas15, round(tapply(nitox.gc, MK,se),3))\ncolnames(gas15.fig4) = head2 = c(\"MK\",\"treat\",\"soil\",\"nitox.mean\",\"nitox.pool.mean\",\"nitox.gc.mean\",\"nitox.se\",\"nitox.pool.se\", \"nitox.gc.se\")\n\n# gas15.fig4$treat <- factor(gas15.fig4$treat, levels = c(\"Lt\", \"Fc\", \"LF\", \"C\"))\ngas15.fig4$Lter <- factor(rep(rep(c(\"+Lt\", \"-Lt\"), c(7,6)),2))\ngas15.fig4$col.fac <- interaction(gas15.fig4$soil, gas15.fig4$Lter, sep=\"\")\nstr(gas15.fig4)\ngas15.fig4 <- droplevels(gas15.fig4)   \n#### create Single Panel Plot with ellipse #\n\n# Color palettes\nLtSoil_pal=c(\"gray8\", \"gray30\", \"gray48\", \"gray70\")\nLtSoil_pal2=c(\"darkseagreen\", \"burlywood\", \"darkolivegreen3\", \"darkgoldenrod1\")\ntitle = expression(paste(\"Plant derived \",N[2],\"O depending on soiltype and presence of L. terrestris\"))\n\n\n# For annotation\nellipse.mean=with(gas15.fig4, aggregate(gas15.fig4[,c(6,5)],list(group=col.fac),mean))\n\n# Special function \nveganCovEllipse <- function (cov, center = c(0, 0), scale = 1, npoints = 100) \n{\n  theta <- (0:npoints) * 2 * pi/npoints\n  Circle <- cbind(cos(theta), sin(theta))\n  t(center + scale * t(Circle %*% chol(cov)))\n}\n\ndf_ell <- data.frame()\nfor(g in levels(gas15.fig4$col.fac)){\n  df_ell <- rbind(df_ell, cbind(as.data.frame(with(gas15.fig4[gas15.fig4$col.fac==g,],\n                                                   veganCovEllipse(cov.wt(cbind(nitox.gc.mean,nitox.pool.mean),wt=rep(1/length(nitox.gc.mean),length(nitox.gc.mean)))$cov,center=c(mean(nitox.gc.mean),mean(nitox.pool.mean)))))\n                                ,group=g))\n}\n\ntxt.pool = expression(paste(\"Plant derived \", N[2],\"O\",\"[%]\"))\ntxt.nitox = expression(paste(\"Nitrous Oxide \", N[2],\"O [?g \",N[2],\"O-N \",kg^-1, h^-1,\"]\"))\n\np4 = ggplot(data=gas15.fig4, aes(x=nitox.gc.mean, y=nitox.pool.mean)) +\n  #guides(colour=F, shape=F) +\n  geom_point(aes(colour=col.fac, shape=treat), size=1.5) +\n  geom_path(data=df_ell, aes(x=nitox.gc.mean, y=nitox.pool.mean, colour=group), size=0.5, linetype=2) +\n  annotate(\"text\",x=ellipse.mean$nitox.gc.mean+0.1,y=ellipse.mean$nitox.pool.mean,label=ellipse.mean$group, size=2.5) +\n  scale_shape_manual(values=c(17,16,15,21)) +\n  scale_colour_manual(values=LtSoil_pal) +\n  scale_y_continuous(limits=c(0,1)) +\n  ylab(txt.pool) +\n  xlab(txt.nitox)\np4 + mytheme +theme(legend.position=c(0.08,0.75) )\n```\n\nAll Incubation measures [AIM]\nData frame with litter derived -N2, -N2O, -N2+N2O, -N2O + soil derived N2O, N2 + total N2O, percentage, product ratio N2/litter N2O, N2/total N2O\n\n```{r}\nAIM <- data.frame(gas15[,1:13],\n                      litd.dinitrogen=gas15$dinitrogen,\n                       litd.nitox=gas15$nitox,\n                       litd.total=gas15$dinitrogen+gas15$nitox,\n                       total.nitox=gas15$nitox.gc,\n                       total.Ngas=gas15$nitox.gc+gas15$dinitrogen,\n                       nitox.pool=gas15$nitox.pool,\n                       litd.product.ratio=gas15$product.ratio,\n                       product.ratio=gas15$nitox.gc/(gas15$dinitrogen+gas15$nitox.gc),\n                       iso.enrichment=gas15$nitox.atperc)\n# A: ?ber die Zeit mitteln, dann ?ber treatments mitteln\nAIM.mean <-  data.frame(cbind(unique(gas15.2[,-c(1,4:7,14:22)]),aggregate(gas15.2[,14:22], list(MK=MK), mean)))\nAIM.treat <- aggregate(AIM.mean, list(treat=AIM.mean$treat, soil=AIM.mean$soil), mean)\n# B: ?ber die Zeit kumulieren, dann ?ber treatments mitteln\nAIM.cum <- data.frame(AIM.mean, \n                      ltd.total.cum=gas15.cum$total[1:26],\n                      ltd.nitox.cum=gas15.cum$nitox[1:26],\n                      ltd.dinitrogen.cum=gas15.cum$dinitrogen[1:26],\n                      total.nitox.cum=gas15.cum$nitox.gc[1:26],\n                      total.cum=gas15.cum$dinitrogen[1:26]+gas15.cum$nitox.gc[1:26])\nAIM.cum.treat <- aggregate(AIM.cum, list(treat=AIM.cum$treat, soil=AIM.cum$soil), mean)\n\nA.data=AIM.cum[AIM.cum$soil==\"Sand\",]\n\nt.test(ltd.total.cum~Lt,A.data) # n.s.\nt.test(litd.total~Lt,A.data) # n.s.\nt.test(total.nitox~Lt,A.data) \nt.test(total.nitox.cum~Lt,A.data) \nAIM.cum.aov2 <- aov(log(total.nitox.cum)~Lt*soil,AIM.cum)\nAIM.cum.aov1 <- aov(litd.nitox~Lt*soil,AIM.cum)\n\nTukeyHSD(AIM.cum.aov1)\nTukeyHSD(AIM.cum.aov2)\n\nggplot(AIM.cum, aes(x= Lt, y=total.nitox.cum),labeller=label_parsed) +\n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"light blue\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +\n  ylab(expression(paste(\"total.nitox.cum\"))) +\n  xlab(\"L.~terrestris\") +\n  facet_grid(.~soil, labeller=label_parsed) + \n  mytheme\n\nggplot(AIM.cum, aes(x= Lt, y=ltd.nitox.cum),labeller=label_parsed) +\n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"light blue\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +\n  ylab(expression(paste(\"litd.nitox\"))) +\n  xlab(\"L.~terrestris\") +\n  facet_grid(.~soil, labeller=label_parsed) + \n  mytheme\n\n```\n\n\n\n#### Cumulative N2O, N2, Total\n```{r}\n# Cumulative gas between two dates\ncumulative = function (x) 168*(x[i:(length(x)-j)]+0.5*(x[(i+j):length(x)]-x[i:(length(x)-j)]))\n\ngas15.cum = matrix(0,78,4)\ni=1\nj=26\na = cumulative(gas15$total)\nb = cumulative(gas15$dinitrogen)\nc = cumulative(gas15$nitox)\nd = cumulative(gas15$nitox.gc)\n\n# summed up for up to last date\ncumulative2 = function(x) x[i:j]+x[(i+26):(j+26)]+x[(i+26+26):(j+26+26)]\ngas15.cum[,1] = a = cumulative2(a)\ngas15.cum[,2] = b = cumulative2(b)\ngas15.cum[,3] = c = cumulative2(c)\ngas15.cum[,4] = d = cumulative2(d)\ncolnames(gas15.cum) = colnames(gas15[,c(22:24,14)])\n\n# data frame for analysis \ngas15.cum = cbind(gas15[1:26,1:3],gas15[1:26,8:13], gas15.cum)\nstr(gas15.cum)\n\n# write.table(gas15.cum, \"gas15_cumR.txt\", dec=\".\", sep=\";\", row.names=F)\n\n\n# Second dataframe for standard error\ncumulative = function (x) 168*(x[i:(length(x)-j)]+0.5*(x[(i+j):length(x)]-x[i:(length(x)-j)]))\ngas15.cum2 = matrix(0,78,4)\ni=1\nj=26\ngas15.cum2[,1] = a = cumulative(gas15$total)\ngas15.cum2[,2] = b = cumulative(gas15$dinitrogen)\ngas15.cum2[,3] = c = cumulative(gas15$nitox)\ngas15.cum2[,4] = d = cumulative(gas15$nitox.gc)\ncolnames(gas15.cum2) = colnames(gas15[,c(22:24,14)])\ngas15.cum3 = gas15.cum2\ngas15.cum3 = as.data.frame(gas15.cum3, stringsAsFactor=F)\nstr(gas15.cum3)\n\nfor (j in 1:4)  {\n  for (i in 27:78) {\n    gas15.cum2[i,j] =  gas15.cum2[i,j] + gas15.cum2[i-26,j]\n  }\n}\n\ngas15.cum2 = cbind(gas15[27:104,1:13], gas15.cum2)\ngas15.cum2$treat = factor(gas15.cum2$treat, level=c(\"Lt\",\"Fc\",\"LF\",\"C\"))\nstr(gas15.cum2)\n# gas_cum_test= gas15.cum2[gas15.cum2$day == 40,]\n\n\n# df for mean over time(day)\ngas15.cum2.mean   = matrix(0,24,7)\ngas15.cum2.mean[,1] = rep(c(\"Lt\", \"Fc\", \"LF\", \"C\"),c(3,3,3,3))\ngas15.cum2.mean[,2] = rep(c(26, 33, 40),4)\ngas15.cum2.mean[,3] = rep(c(\"Loam\", \"Sand\"),c(12,12))\ngas15.cum2.mean[,4] = with(gas15.cum2, tapply(total, list(day,treat,soil), mean))\ngas15.cum2.mean[,5] = with(gas15.cum2, tapply(nitox, list(day,treat,soil), mean))\ngas15.cum2.mean[,6] = with(gas15.cum2, tapply(dinitrogen, list(day,treat,soil), mean))\ngas15.cum2.mean[,7] = with(gas15.cum2, tapply(nitox.gc, list(day,treat,soil), mean))\ncolnames(gas15.cum2.mean) = c(\"treat\",\"day\",\"soil\",\"total.mean\",\"nitox.mean\",\"dinitrogen.mean\", \"nitox.gc.mean\")\ngas15.cum2.mean <- as.data.frame(gas15.cum2.mean, stringsAsFactors=F)\nstr(gas15.cum2.mean)\n\n\n# df for standard error over time(day)\ngas15.cum2.se     = matrix(0,24,7)\ngas15.cum2.se[,1] = rep(c(\"Lt\", \"Fc\", \"LF\", \"C\"),c(3,3,3,3))\ngas15.cum2.se[,2] = rep(c(26, 33, 40),4)\ngas15.cum2.se[,3] = rep(c(\"Loam\", \"Sand\"),c(12,12))\ngas15.cum2.se[,4] = with(gas15.cum2, tapply(total, list(day,treat,soil), se))\ngas15.cum2.se[,5] = with(gas15.cum2, tapply(nitox, list(day,treat,soil), se))\ngas15.cum2.se[,6] = with(gas15.cum2, tapply(dinitrogen, list(day,treat,soil), se))\ngas15.cum2.se[,7] = with(gas15.cum2, tapply(nitox.gc, list(day,treat,soil), se))\ncolnames(gas15.cum2.se) = c(\"treat\",\"day\",\"soil\",\"total.se\",\"nitox.se\",\"dinitrogen.se\",\"nitox.gc.se\")\ngas15.cum2.se <- as.data.frame(gas15.cum2.se, stringsAsFactors=F)\nstr(gas15.cum2.se)\n\n# Formel f?r Fehler durch Fehlerfortpflanzung: function (x) sqrt(sum((Kum_StdF[i,1:j])^2\ngas15.cum2.se <- melt(gas15.cum2.se, id.vars= c(1:3))\ngas15.cum2.se$treat = factor(gas15.cum2.se$treat, level=c(\"Lt\",\"Fc\",\"LF\",\"C\"))\ngas15.cum2.se <- dcast(gas15.cum2.se, variable + soil + treat ~ day)\ncolnames(gas15.cum2.se) [1] = \"gas\"\ngas15.cum2.se.ts <- as.data.frame(lapply(gas15.cum2.se[,4:6], as.numeric))\n\nfor (i in 1:24)  {\n  for (j in 1:3) {\n    a=sqrt(sum((gas15.cum2.se.ts[i,1:j])^2))\n             gas15.cum2.se.ts[i,j]=a\n  }\n}\n\ngas15.cum2.se.ts <- melt(cbind(gas15.cum2.se[,1:3], gas15.cum2.se.ts), id.vars=c(1:3))\ngas15.cum2.se.ts <- dcast(gas15.cum2.se.ts, soil+treat+variable~gas)\ngas15.cum2.meanse <- cbind(gas15.cum2.mean, gas15.cum2.se.ts[,4:7])\n\n# write.table(gas15.cum2.meanse, \"gas15_cum2_meanse.txt\", dec=\".\", sep=\";\", row.names=F)\n\n\n# Multipanel Line Plot\ntxt.full  = expression(paste( ,\"\",paste(?g~N[2]-N~kg^-1),\"       \",paste(?g~paste(N[2],O)-N~kg^-1),\"        \",paste(?g~Total-N~kg^-1),\"  \",paste(?g~total~paste(N[2],O)-N~kg^-1)))\n\nhelpframe1 = melt(gas15.cum2.meanse, id.vars=c(1:3), measure.vars=c(4:7), variable.name=\"mean.fac\", value.name=\"mean\")\nhelpframe2 = melt(gas15.cum2.meanse, id.vars=c(1:3), measure.vars=c(8:11), variable.name=\"se.fac\", value.name=\"se\")\ngas15.cum2.meanse.plot <- cbind(helpframe1,helpframe2[,c(4,5)])\ngas15.cum2.meanse.plot$treat = factor(gas15.cum2.meanse.plot$treat, levels=c(\"Lt\",\"Fc\",\"LF\",\"C\"))\ngas15.cum2.meanse.plot$mean = as.numeric(gas15.cum2.meanse.plot$mean)\nstr(gas15.cum2.meanse.plot)\n\ngas15.cum2.meanse.plot$mean.fac = revalue(gas15.cum2.meanse.plot$mean.fac, c(total.mean=\"paste(N[2],O)+N[2]\", nitox.mean=\"paste(N[2],O)\", dinitrogen.mean=\"N[2]\",nitox.gc.mean=\"paste(total~N[2],O)\"))\n\npd=position_dodge(0.2)\nggplot(data=gas15.cum2.meanse.plot, aes(x=day, y=mean, group=treat, shape=treat)) +\n  facet_grid(mean.fac~soil, scales=\"free\", labeller=label_parsed) +\n  #guides(colour=F, shape=F) +\n  geom_errorbar(aes(ymin=mean-se, ymax=mean+se), size=0.25, width=.3, position=pd) + \n  geom_line(size=0.3, position=pd) +\n  geom_point(size=1.5, position=pd, colour=\"black\", fill=\"white\") +\n  scale_shape_manual(values=c(17,16,15,21), labels=c(\"L. terrestris\", \"F. candida\",\"Interaction\",\"Control\")) +\n  #scale_colour_manual(values=trt_pal) +\n  #scale_colour_grey(start=0, end=0.6) +\n  labs(shape=\"\") +\n  xlab(\"Days [d]\") +\n  ylab(txt.full) +\n  mytheme + theme(legend.position=\"bottom\") \n```\n\n### Analysis\n```{r Analysis5}\n# The data\ngas15.data <- cbind(gas15.cum, product.ratio=as.numeric(with(gas15.data, tapply(product.ratio,MK,mean))),\n                    nitox.pool=as.numeric(with(gas15, tapply(nitox.pool,MK,mean))))\ngas15.data2 <- gas15.data[!(gas15.data$soil==\"Loam\"&gas15.data$Lt==\"n\"),]\nstr(gas15.data)\n\n###### product ratio\nhist(gas15.data$product.ratio)\n\nggplot(gas15.data, aes(x= Lt, y=product.ratio),labeller=label_parsed) +\n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"light blue\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +\n  ylab(expression(paste(\"product ratio\"))) +\n  xlab(\"italic(L.~terrestris)\") +\n  ggtitle(expression(paste(\"Product Ratio\"))) +\n  facet_grid(~soil, labeller=label_parsed) + \n  scale_x_discrete(expression(italic(L.~terrestris)), labels=c(\"absent\",\"present\")) +\n  mytheme\n\n# ANOVA without transformation\n    gas15.pr.aov <- aov(product.ratio~soil*Lt*Fc, gas15.data); summary(gas15.pr.aov)\n    TukeyHSD(gas15.pr.aov)\n\n# ANOVA with Arcsine transformation\n    gas15.pr.aov <- aov(asin(sqrt(product.ratio))*180/pi~soil*Lt*Fc, gas15.data); summary(gas15.pr.aov)\n    # validation plot\n    par(mfrow=c(2,2))\n    par(mar=c(3,3,3,3))\n    plot(gas15.pr.aov)\n    \n    fligner.test(asin(sqrt(product.ratio))*180/pi~soil*Lt*Fc, gas15.data)\n    with(gas15.data, shapiro.test(asin(sqrt(product.ratio))*180/pi))# if this Test is significant, the data is significantly different from Normal sitribution and the ANOVA assumption is violated\n\n\n# ANOVA with model simplification\n    gas15.pr.aov <- update(gas15.pr.aov, .~soil*Lt);summary(gas15.pr.aov)\n    # validation plot\n    par(mfrow=c(2,2))\n    plot(gas15.pr.aov)\n    \n    fligner.test(asin(sqrt(product.ratio))*180/pi~interaction(soil,Lt), gas15.data)\n\n# Post Hoc Tukey Test\n                prodr.int <- with(gas15.data, interaction(soil,Lt)) # Double interaction factor\n                gas15.pr.aov2 <- aov(product.ratio~prodr.int, data=gas15.data)\n                HSD.test(gas15.pr.aov2, \"prodr.int\", group=TRUE, console=TRUE) \n                pr.tuk1 <- glht(gas15.pr.aov2, linfct = mcp(prodr.int = \"Tukey\"))\n                summary(pr.tuk1)          # standard display\n                pr.tuk.cld <- cld(pr.tuk1)   # letter-based display\n                par(mai=c(1,1,1.1,0.2),  # mai specifies margin size in inches\n                    mfrow=c(1,1),\n                    mgp=c(2,1,0),\n                    cex=0.8) \n                plot(pr.tuk.cld, cex=0.5, las=2, col=\"grey\", xaxt=\"n\")\n                axis(1, at=pr.int,labels=FALSE)\n                text(pr.int, labels=pr.int, par(\"usr\")[3], adj=c(1.2,1.2), xpd=TRUE, srt=45, cex=0.8)\n \ngas15.pr.aov3 <- aov(asin(sqrt(product.ratio))*180/pi~soil*Lt,gas15.data2);summary(gas15.pr.aov3)\npar(mfrow=c(2,2))\nplot(gas15.pr.aov3)\n# Leaving out Loamy treatments without L. terrestris because their emissions have almost ambient air concentration, shows significant effect of sandy soil.\n\nggplot(gas15.data, aes(x= Lt, y=product.ratio),labeller=label_parsed) +\n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"light blue\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +\n  ylab(expression(paste(\"product ratio\"))) +\n  xlab(\"italic(L.~terrestris)\") +\n  ggtitle(expression(paste(\"Product Ratio\"))) +\n  facet_grid(~soil, labeller=label_parsed) + \n  scale_x_discrete(expression(italic(L.~terrestris)), labels=c(\"absent\",\"present\")) +\n  mytheme\n\nggplot(gas15.data, aes(x= soil, y=product.ratio),labeller=label_parsed) +\n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"light blue\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +\n  ylab(expression(paste(\"product ratio\"))) +\n  xlab(\"Soil\") +\n  ggtitle(expression(paste(\"Product Ratio\"))) +\n  facet_grid(~Lt, labeller=label_parsed) + \n  scale_x_discrete(expression(italic(L.~terrestris)), labels=c(\"Loam\",\"Sand\")) +\n  mytheme\n\nwith(gas15.data, round(tapply(product.ratio,interaction(Lt,soil), mean),2))\nwith(gas15.data, round(tapply(product.ratio,interaction(Lt,soil), se),2))\n\n#### Nitrous Oxide\n\ngas15.nx.aov <- aov(nitox~soil*Lt*Fc, gas15.data); summary(gas15.nx.aov)\n\npar(mfrow=c(2,2))\npar(mar=c(3,3,3,3))\nplot(gas15.nx.aov)\n\ngas15.nx.aov <- aov(log1p(nitox)~soil*Lt*Fc, gas15.data); summary(gas15.nx.aov)\ngas15.nx.aov <- update(gas15.nx.aov,.~soil*Lt, gas15.data); summary(gas15.nx.aov)\n\nfligner.test(log1p(nitox)~interaction(soil,Lt), gas15.data)\nTukeyHSD(gas15.nx.aov)\n\n# Post Hoc Tukey Test\n                nx.int <- with(gas15.data, interaction(soil,Lt)) # Double interaction factor\n                gas15.nx.aov2 <- update(gas15.nx.aov, .~ nx.int)\n                HSD.test(gas15.nx.aov2, \"nx.int\", group=TRUE, console=TRUE) \n                nx.tuk1 <- glht(gas15.nx.aov2, linfct = mcp(nx.int = \"Tukey\"))\n                summary(nx.tuk1)          # standard display\n                nx.tuk.cld <- cld(nx.tuk1)   # letter-based display\n                par(mai=c(1,1,1.1,0.2),  # mai specifies margin size in inches\n                    mfrow=c(1,1),\n                    mgp=c(2,1,0),\n                    cex=0.8) \n                plot(nx.tuk.cld, cex=0.5, las=2, col=\"grey\", xaxt=\"n\")\n                axis(1, at=nx.int,labels=FALSE)\n                text(nx.int, labels=nx.int, par(\"usr\")[3], adj=c(1.2,1.2), xpd=TRUE, srt=45, cex=0.8)\n\nwith(gas15.data, list( tapply(nitox, list(Lt,soil), mean),\n                        tapply(nitox, list(Lt,soil), se)))\n\n\ngas15.nx.aov <- aov(log1p(nitox)~soil*Lt, gas15.data2); summary(gas15.nx.aov)\nwith(gas15.data2[(gas15.data2$Lt==\"y\"),], t.test(log1p(nitox)~soil, alternative=\"less\"))\n\nexpm1(4.791717)\nexpm1(5.335476)\nexpm1(4.791717)-expm1(5.335476)\nwith(gas15.data, list( tapply(nitox, soil, mean),\n                        tapply(nitox, soil, se)))\n\n# Dinitrogen\n\nggplot(gas15.data, aes(x= Lt, y=dinitrogen),labeller=label_parsed) +\n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"light blue\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +\n  ylab(expression(paste(\"product ratio\"))) +\n  xlab(\"italic(L.~terrestris)\") +\n  ggtitle(expression(paste(\"Product Ratio\"))) +\n  facet_grid(~soil, labeller=label_parsed) + \n  scale_x_discrete(expression(italic(L.~terrestris)), labels=c(\"absent\",\"present\")) +\n  mytheme\n\nggplot(gas15.data, aes(x= soil, y=dinitrogen),labeller=label_parsed) +\n  stat_boxplot(geom=\"errorbar\", coef=1.5, lwd=0.2) + \n  geom_boxplot(fill=\"light blue\", lwd=0.2, outlier.size=0.4, outlier.shape=21) +\n  ylab(expression(paste(\"product ratio\"))) +\n  xlab(\"Soil\") +\n  ggtitle(expression(paste(\"Product Ratio\"))) +\n  facet_grid(~Lt, labeller=label_parsed) + \n  scale_x_discrete(expression(italic(L.~terrestris)), labels=c(\"Loam\",\"Sand\")) +\n  mytheme\n\ngas15.dn.aov <- aov(dinitrogen~soil*Lt*Fc, gas15.data); summary(gas15.dn.aov)\n\npar(mfrow=c(2,2))\npar(mar=c(3,3,3,3))\nplot(gas15.dn.aov)\n\ngas15.dn.aov <- aov(log1p(dinitrogen)~soil*Lt*Fc, gas15.data); summary(gas15.dn.aov)\ngas15.dn.aov <- update(gas15.dn.aov,.~soil*Lt, gas15.data); summary(gas15.dn.aov)\n\npar(mfrow=c(2,2))\npar(mar=c(3,3,3,3))\nplot(gas15.dn.aov)\n\nTukeyHSD(gas15.dn.aov)\n\ngas15.dn.aov <- aov(log1p(dinitrogen)~soil*Lt, gas15.data2); summary(gas15.dn.aov)\nwith(gas15.data2[(gas15.data2$Lt==\"y\"),], t.test(log1p(dinitrogen)~soil, alternative=\"less\"))\n\nwith(gas15.data, list( tapply(dinitrogen, soil, mean),\n                        tapply(dinitrogen, soil, se)))\n\nwith(gas15.data, list( tapply(dinitrogen, list(soil,Lt), mean),\n                        tapply(dinitrogen, list(soil,Lt), se)))\n\n\n# litter-derived N2O\ngas15.np.aov <- aov(nitox.pool~soil*Lt*Fc, gas15.data); summary(gas15.np.aov)\n\npar(mfrow=c(2,2))\npar(mar=c(3,3,3,3))\nplot(gas15.np.aov)\n\ngas15.np.aov <- aov(asin(sqrt(nitox.pool))*180/pi~soil*Lt*Fc, gas15.data); summary(gas15.np.aov)\ngas15.np.aov <- update(gas15.np.aov,.~soil*Lt, gas15.data); summary(gas15.np.aov)\n\nfligner.test(log1p(nitox.pool)~interaction(soil,Lt), gas15.data)\nTukeyHSD(gas15.np.aov)\n\nwith(gas15.data, list( tapply(nitox.pool, list(soil,Lt), mean),\n                        tapply(nitox.pool, list(soil,Lt), se)))\n\n```\n\n# Extrapolation of product ratio\n```{r product ratio extrapolation}\nstr(gas15)\ngas15$day <- as.numeric(gas15$day)\n\n# For all together\npr.glm <- glm(cbind(nitox,nitox+dinitrogen) ~ day, family=binomial(logit),gas15)\nsummary(pr.glm)\n\npar(mfrow=c(1,1))\nwith(gas15, plot(day, product.ratio))\n     lines(gas15$day, pr.glm$fitted, type=\"l\", col=\"red\")\nday=c(1,3,5,7,11,15,18,21,25,28,32,35,39,42,48)\nday <- data.frame(day=day)\n x <- data.frame(predict(pr.glm, newdata = day , type = \"response\"))\nstr(day)\n\nplot(cbind(day,x))\n\n# for treat x soil\npr.glm1 <- glm(cbind(nitox,nitox+dinitrogen) ~ day, family=binomial(logit),gas15[(gas15$treat==\"Lt\" & gas15$soil==\"Loam\"),])\n\npr.glm2 <- glm(cbind(nitox,nitox+dinitrogen) ~ day, family=binomial(logit),gas15[(gas15$treat==\"Fc\" & gas15$soil==\"Loam\"),])\n\npr.glm3 <- glm(cbind(nitox,nitox+dinitrogen) ~ day, family=binomial(logit),gas15[(gas15$treat==\"LF\" & gas15$soil==\"Loam\"),])\n\npr.glm4 <- glm(cbind(nitox,nitox+dinitrogen) ~ day, family=binomial(logit),gas15[(gas15$treat==\"C\" & gas15$soil==\"Loam\"),])\n\npr.glm5 <- glm(cbind(nitox,nitox+dinitrogen) ~ day, family=binomial(logit),gas15[(gas15$treat==\"Lt\" & gas15$soil==\"Sand\"),])\n\npr.glm6 <- glm(cbind(nitox,nitox+dinitrogen) ~ day, family=binomial(logit),gas15[(gas15$treat==\"Fc\" & gas15$soil==\"Sand\"),])\n\npr.glm7 <- glm(cbind(nitox,nitox+dinitrogen) ~ day, family=binomial(logit),gas15[(gas15$treat==\"LF\" & gas15$soil==\"Sand\"),])\n\npr.glm8 <- glm(cbind(nitox,nitox+dinitrogen) ~ day, family=binomial(logit),gas15[(gas15$treat==\"C\" & gas15$soil==\"Sand\"),])\n\npr.expol <- matrix(0,15,8)\npr.expol[,1] <- predict(pr.glm1, newdata=day,type = \"response\")\npr.expol[,2] <- predict(pr.glm2, newdata=day,type = \"response\")\npr.expol[,3] <- predict(pr.glm3, newdata=day,type = \"response\")\npr.expol[,4] <- predict(pr.glm4, newdata=day,type = \"response\")\npr.expol[,5] <- predict(pr.glm5, newdata=day,type = \"response\")\npr.expol[,6] <- predict(pr.glm6, newdata=day,type = \"response\")\npr.expol[,7] <- predict(pr.glm7, newdata=day,type = \"response\")\npr.expol[,8] <- predict(pr.glm8, newdata=day,type = \"response\")\n\ncolnames(pr.expol) <- c(\"Lt.Loam\", \"Fc.Loam\", \"Int.Loam\", \"C.Loam\",\"Lt.Sand\", \"Fc.Sand\", \"Int.Sand\", \"C.Sand\")\n\n\npr.expol <- data.frame(cbind(day,pr.expol))\npr.expol <- melt(pr.expol, id.vars=1)\n\npr.expol <-  concat.split.multiple(pr.expol, \"variable\", \".\")\n\nggplot(pr.expol, aes(x=day,y=value)) + \n  geom_point(aes(colour=variable_1)) +\n  facet_grid(~variable_2) + mytheme\n\ncolnames(n2o.means)[c(4:18)] <- c(1,3,5,7,11,15,18,21,25,28,32,35,39,42,48)\n\nn2o.means.expol <- n2o.means[(n2o.means$experiment==\"exp1\"),]\nn2o.means.expol <- melt(n2o.means.expol, id.vars=1:3)\nn2o.means.expol$treat <- factor(n2o.means.expol$treat, levels=c(\"Lt\",\"Fc\",\"int\",\"C\"))\nn2o.means.expol <- n2o.means.expol[with(n2o.means.expol, order(soil,treat)), ]\n\nn2o.means.expol <- cbind(n2o.means.expol,pr.expol=pr.expol$value)\ncolnames(n2o.means.expol)[5] <- \"nitox\"\nn2o.means.expol$total.x <- with(n2o.means.expol, nitox/pr.expol)\n\ntotal.expol <- n2o.means.expol[,c(1,2,4,7)]\ntotal.expol <- dcast(total.expol, treat+soil~variable)\ntotal.expol <- total.expol[with(total.expol, order(soil,treat)),]\nstr(total.expol)\n\ncode <- total.expol[,c(1,2)]\ntotal.expol <- total.expol[,-c(1,2)]\n\ndays=c(1,3,5,7,11,15,18,21,25,28,32,35,39,42,48)\n\nttx.rz=rbind(days,total.expol)\n\n#ttx between two sampling dates\nttx.btw=matrix(rep(0,112),8)\nfor (i in 2:9)\n{for (j in 1:14)\n{Zeit=(ttx.rz[1,(j+1)]-ttx.rz[1,j])*24  #*24da Zeit d in std umgerechnet werden muss\n a=Zeit*ttx.rz[i,j]+0.5*Zeit*(ttx.rz[i,(j+1)]-ttx.rz[i,j])\n ttx.btw[(i-1),j]=a\n}\n}\n\n# cumulative ttx for all samples\nttx.cum=matrix(rep(0,112),8)\nfor (i in 1:8) {\n  for (j in 1:14) {\n    a=sum(ttx.btw[i,1:j])\n    ttx.cum[i,j]=a    \n  }  \n}\n\ncolnames(ttx.cum)<-days[-1]\nttx.cum <- cbind(code,ttx.cum)\nttx.cum <- melt(ttx.cum, id.vars=1:2)\n\nttx.cum2 <- subset(ttx.cum, !(treat %in% c(\"C\",\"Fc\") & soil %in% \"Loam\"))\npd = position_dodge(0.2)\nggplot(ttx.cum2, aes(x=variable, y=value, group=treat, shape=treat)) +\n  facet_grid(~soil, scales=\"free\", labeller=label_parsed) +\n  geom_line(size=0.3, position=pd) +\n  geom_point(size=1.5, position=pd, colour=\"black\", fill=\"white\") +\n  scale_shape_manual(values=c(17,16,15,21), labels=c(\"L. terrestris\", \"F. candida\",\"Interaction\",\"Control\")) +\n  #scale_colour_manual(values=trt_pal) +\n  #scale_colour_grey(start=0, end=0.6) +\n  labs(shape=\"\") +\n  xlab(\"Days [d]\") +\n  ylab(\"total N extrapolated\") +\n  mytheme + theme(legend.position=\"bottom\")  \n\n\nttx.pr <- n2o.means.expol[,c(1,2,3,4,5,6)]\nttx.pr <- ttx.pr[with(ttx.pr, order(variable,soil,treat)),]\n\nttx.cum <- rbind(cbind(ttx.pr[1:8,c(1,2)], variable=ttx.pr[1:8,4],value=rep(NA,8)),ttx.cum)\nttx.cum <- cbind(ttx.cum,nitox=ttx.pr$nitox, pr.expol=ttx.pr$pr.expol)\nttx.cum <- melt(ttx.cum, id.vars=1:3)\ncolnames(ttx.cum) <- c(\"treat\", \"soil\", \"day\", \"variable\", \"value\")\nttx.cum$variable <- revalue(ttx.cum$variable, c(value=\"ttx\") )\nttx.cum$variable <- factor(ttx.cum$variable, levels=c(\"nitox\",\"pr.expol\",\"ttx\") )\n\npd = position_dodge(0.2)\nggplot(ttx.cum, aes(x=day, y=value, group=treat, shape=treat)) +\n  facet_grid(variable~soil, scales=\"free\", labeller=label_parsed) +\n  geom_line(size=0.3, position=pd) +\n  geom_point(size=1.5, position=pd, colour=\"black\", fill=\"white\") +\n  scale_shape_manual(values=c(17,16,15,21), labels=c(\"L. terrestris\", \"F. candida\",\"Interaction\",\"Control\")) +\n  #scale_colour_manual(values=trt_pal) +\n  #scale_colour_grey(start=0, end=0.6) +\n  labs(shape=\"\") +\n  xlab(\"Days [d]\") +\n  ylab(\"total N extrapolated\") +\n  mytheme + theme(legend.position=\"bottom\")  \n\nttx.cum2 <- subset(ttx.cum, !(treat %in% c(\"C\",\"Fc\") & soil %in% \"Loam\"))\n\npd = position_dodge(0.2)\nggplot(ttx.cum2, aes(x=day, y=value, group=treat, shape=treat)) +\n  facet_grid(variable~soil, scales=\"free\", labeller=label_parsed) +\n  geom_line(size=0.3, position=pd) +\n  geom_point(size=1.5, position=pd, colour=\"black\", fill=\"white\") +\n  scale_shape_manual(values=c(17,16,15,21), labels=c(\"L. terrestris\", \"F. candida\",\"Interaction\",\"Control\")) +\n  #scale_colour_manual(values=trt_pal) +\n  #scale_colour_grey(start=0, end=0.6) +\n  labs(shape=\"\") +\n  xlab(\"Days [d]\") +\n  ylab(\"total N extrapolated\") +\n  mytheme + theme(legend.position=\"bottom\")\n\n#write.table(ttx.cum[(ttx.cum$day==48&ttx.cum$variable==\"ttx\"),],\"ttx.cum.csv\", sep=\";\")\n\n```\n\nwieviel N aus dem Pflanzenmaterial ging verloren?\nwieviel h?her war N2 im vergleich zu n2o? Faktoren\n\n# Isotopomers\n```{r Isotopomers}\n\nisom.data.600 <- with(isom.data.all, isom.data.all[N2O.conc > 600,])\nisom.data.600$treat <- factor(isom.data.600$treat, levels=c(\"Lt\", \"Fc\", \"Int\", \"Control\")) \n\nwith(isom.data.all, plot(d18o,sp))\nwith(isom.data.600, plot(d18o,sp))\ncol=soil, fill=as.factor(Sampleset)),\n\nggplot(isom.data.600, aes(x=d18o, y=sp, shape=treat),  labeler=label_parsed) +\n  #geom_point(aes(x=d18o, y=sp),size=1.6, lwd=0.01,col=\"black\", shape=16, isom.data.600[(isom.data.600$soil==\"Loam\"),]) +\n  geom_point(aes(x=d18o, y=sp),size=1.4, lwd=0.01,col=\"white\", shape=16, isom.data.600[(isom.data.600$soil==\"Loam\"),]) +\n  geom_point(size=2.0, lwd=0.2, col=\"black\", show_guide=TRUE) +\n  geom_point(size=1.2, lwd=0.2, aes(colour=as.factor(interaction(Sampleset,soil)))) +\n  geom_rect( mapping=aes(xmin=10, xmax=20, ymin=-10, ymax=0), color=\"grey\", alpha=0.01) +\n  geom_rect( mapping=aes(xmin=40, xmax=50, ymin=33, ymax=36), color=\"grey\", alpha=0.01) +\n  geom_rect( mapping=aes(xmin=30, xmax=40, ymin=34, ymax=37), color=\"grey\", alpha=0.01) +\n  geom_abline(intercept = c(-12.5,0), slope = 0.5, alpha=0.1)+\n  geom_abline(intercept = c(-20,0), slope = 0.5, alpha=0.1)+\n  geom_abline(intercept = c(-5,0), slope = 0.5, alpha=0.1)+\n  geom_abline(intercept = c(-8,0), slope = 0.2, alpha=0.1)+\n  geom_abline(intercept = c(-14,0), slope = 0.2, alpha=0.1)+\n  geom_abline(intercept = c(-2,0), slope = 0.2, alpha=0.1)+\n  annotate(\"text\",x=35, y=35.5, label=\"fungal nitrification\", size=1.6, colour=\"black\" ,face=\"italic\") +\n  annotate(\"text\",x=45, y=34.5, label=\"nitrification\", size=1.6, colour=\"black\" ,face=\"italic\") +\n  annotate(\"text\", x=15, y=-5, label=\"denitrification\", size=1.6, col=\"black\") +\n  annotate(\"text\", x=45, y=20, label=\"y=0.5x+c\", size=1.6, col=\"black\") +\n  annotate(\"text\", x=40, y=-8, label=\"y=0.2x+c\", size=1.6, col=\"black\") +\n  ylab(\"Site preference [\\211]\") +\n  xlab(expression(paste({delta}^18*O[soil],\" [\\211]\"))) +\n  scale_y_continuous(limits=c(-10,40),breaks=seq(-10,40,10)) +\n  #scale_shape_manual(values=c(21,23,24,22)) +\n  scale_shape_manual(labels=c(\"L. terrestris\",\"F. candida\",\"Interaction\",\"Control\"),values=c(17,16,15,18)) +\n  scale_colour_manual(\"soil texture\",labels=c(\"Loam (day 3)\", \"Loam (day 21)\", \"Sand (day 21)\"),values=c(\"grey\", \"white\", \"black\")) +\n  mytheme + theme(legend.position=\"none\", \n                  axis.title.y = element_text(size=8, face=\"plain\", family=\"Times New Roman\"))\n  \n+ theme(legend.position=c(0.1,0.75), \n                  legend.text=element_text(size=6,face=\"plain\", family=\"Times New Roman\"),\n                  text=element_text(lineheight=0.4),\n                  legend.margin=unit(0.2, \"cm\")) +\n  guides(shape = guide_legend(label.theme =element_text(family=\"Times New Roman\", face = \"italic\", size=6, angle=0)))\n\n\n                  #ggsave(\"Figure 5.pdf\", width=9, height=7, units=\"cm\", useDingbats=FALSE)\n\nlocator(1)\n\n\nwith(isom.data.600, list(round(tapply(sp, list(treat, soil, Sampleset), mean),0),\n                   round(tapply(sp, list(treat, soil, Sampleset), se),0)))\n\n\n\nisom.lm1 <- lm(sp~interaction(Sampleset,soil),isom.data.600)\nsummary(isom.lm1)\n\n\n\nisom.test  <-  cbind(isom.data.600$sp, isom.data.600$d18o)\nisom.mv1 <- manova(isom.test~interaction(Sampleset,soil),isom.data.600)\nsummary(isom.mv1, test=\"Pillai\")\nsummary.aov(isom.mv1)\n\nisom.aov1 <- aov(sp~interaction(Sampleset,soil),isom.data.600)\nsummary(isom.aov1)\nTukeyHSD(isom.aov1)\n\nisom.aov2 <- aov(d18o~interaction(Sampleset,soil),isom.data.600)\nsummary(isom.aov2)\nTukeyHSD(isom.aov2)\n\n\nwith(isom.data.600, by(sp, interaction(soil,Sampleset),summary))\nwith(isom.data.600, by(d18o, interaction(soil,Sampleset),summary))\n\n# Reduction of n2o to n2, Rayleigh Equation\n# Rayleigh <- SP = SP0 + eSP*ln(f) // Sp = Sp0 + eSP*(1-f)\n# nach F aufgel?st:\n# f = e^((SP-SP0)/eSP) // f = 1-(SP-SP0)/eSP\n\nisom.loam.set2 <- isom.data.600[with(isom.data.600,(Sampleset==2 & soil==\"Loam\")),]\nsp <- mean(isom.loam.set2$sp)+1000\nsp0 <- -5+1000\nfracfac <- 1000/-5\n\nf  <-  (sp/sp0)^fracfac\nround(f,2)\n\n```\n\n\n# Quantification of N-Loss\n```{r N-Loss}\n\n# N-Loss from n2o emissions (with soil derived!)\n\nn2o.cum.mean[1:8,c(1,2,3,17)]\n\nx <- n2o.cum.mean[1:8,17]\n\nx <- x*10^-3\n\nfac.ha*x*10^-6\n\n\n# N Loss from 15N isotope sampling\n\nx2 <- with(gas15.cum2.mean[gas15.cum2.mean$day==40,], as.numeric(dinitrogen.mean)+as.numeric(nitox.gc.mean))\n\nN.loss15 <- cbind(Lt=factor(rep(c(1,0,1,0),2)), gas15.cum2.mean[gas15.cum2.mean$day==40,], N.loss=x2*10^-3)\n\ntotal1 <- with(N.loss15, list( tapply(N.loss, list(Lt,soil), mean),\n                        tapply(N.loss, list(Lt,soil), se)))\ntotal2 <- with(N.loss15, list( tapply(N.loss, Lt, mean),\n                        tapply(N.loss, Lt, se)))\ntotal1\n\ntotal2\n\nN.input = 61.5 #[mg]\nN.lost = c(1.52, 1.23,0.18) #[mg/kg]\n\n#percentage N-loss\nN.lost/N.input*100\n\n# calculated N-loss ofr 1 ha\nha = 10000 #[m^2]\nbulk = 1200 #[kg m^-3]\ndepth = 0.2 #[m]\n\nfac.ha = ha*depth*bulk\nfac.ha = 2400000 #[kg]\nfac.ha*N.lost*10^-6 #[kg/ha]\n\n```\n\n\n\n",
    "created" : 1432392225250.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2173450013",
    "id" : "C59C92BD",
    "lastKnownWriteTime" : 1429259558,
    "path" : "D:/Quentin_Schorpp/Arbeitsprozess/git_repositories/V1_Nitrogen/Analysis/V1_Analysis.Rmd",
    "project_path" : "Analysis/V1_Analysis.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}